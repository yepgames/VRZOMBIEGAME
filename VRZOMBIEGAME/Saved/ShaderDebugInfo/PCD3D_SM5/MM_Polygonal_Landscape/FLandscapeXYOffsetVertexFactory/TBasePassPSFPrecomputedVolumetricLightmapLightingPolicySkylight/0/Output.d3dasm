//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 View_View_ViewForward;      // Offset:  992 Size:    12
//   float4 View_View_InvDeviceZToWorldZTransform;// Offset: 1072 Size:    16
//   float4 View_View_ScreenPositionScaleBias;// Offset: 1088 Size:    16
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 View_View_ViewRectMin;      // Offset: 1984 Size:    16
//   float4 View_View_ViewSizeAndInvSize;// Offset: 2000 Size:    16
//   float4 View_View_LightProbeSizeRatioAndInvSizeRatio;// Offset: 2016 Size:    16
//   float4 View_View_BufferSizeAndInvSize;// Offset: 2032 Size:    16
//   int View_View_NumSceneColorMSAASamples;// Offset: 2080 Size:     4
//   float View_View_PreExposure;       // Offset: 2084 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2096 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2112 Size:    16
//   float4 View_View_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 View_View_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//   float View_View_OutOfBoundsMask;   // Offset: 2160 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2208 Size:     4
//   float View_View_UnlitViewmodeMask; // Offset: 2240 Size:     4
//   float3 View_View_PrecomputedIndirectLightingColorScale;// Offset: 2464 Size:    12
//   float3 View_View_PrecomputedIndirectSpecularColorScale;// Offset: 2480 Size:    12
//   float View_View_RenderingReflectionCaptureMask;// Offset: 2860 Size:     4
//   float View_View_SkyLightApplyPrecomputedBentNormalShadowingFlag;// Offset: 2900 Size:     4
//   float4 View_View_SkyLightColor;    // Offset: 2912 Size:    16
//   float View_View_ReflectionCubemapMaxMip;// Offset: 3048 Size:     4
//   float View_View_IndirectCapsuleSelfShadowingIntensity;// Offset: 3060 Size:     4
//   float3 View_View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;// Offset: 3072 Size:    12
//   float3 View_View_VolumetricFogInvGridSize;// Offset: 3568 Size:    12
//   float3 View_View_VolumetricFogGridZParams;// Offset: 3584 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVScale;// Offset: 3616 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVAdd;// Offset: 3632 Size:    12
//   float3 View_View_VolumetricLightmapIndirectionTextureSize;// Offset: 3648 Size:    12
//   float View_View_VolumetricLightmapBrickSize;// Offset: 3660 Size:     4
//   float3 View_View_VolumetricLightmapBrickTexelSize;// Offset: 3664 Size:    12
//   float View_View_MinRoughness;      // Offset: 3816 Size:     4
//
// }
//
// cbuffer InstancedView
// {
//
//   row_major float4x4 InstancedView_InstancedView_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 InstancedView_InstancedView_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 InstancedView_InstancedView_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 InstancedView_InstancedView_ViewTilePosition;// Offset:  960 Size:    12
//   float3 InstancedView_InstancedView_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 InstancedView_InstancedView_ViewForward;// Offset:  992 Size:    12
//   float4 InstancedView_InstancedView_ScreenPositionScaleBias;// Offset: 1088 Size:    16
//   float3 InstancedView_InstancedView_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 InstancedView_InstancedView_ViewRectMin;// Offset: 1984 Size:    16
//   float4 InstancedView_InstancedView_ViewSizeAndInvSize;// Offset: 2000 Size:    16
//   float4 InstancedView_InstancedView_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 InstancedView_InstancedView_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//   float4 InstancedView_InstancedView_SkyLightColor;// Offset: 2912 Size:    16
//
// }
//
// cbuffer ReflectionCapture
// {
//
//   float4 ReflectionCapture_ReflectionCapture_CaptureProperties[341];// Offset: 10912 Size:  5456
//   float4 ReflectionCapture_ReflectionCapture_CaptureOffsetAndAverageBrightness[341];// Offset: 16368 Size:  5456
//
// }
//
// cbuffer OpaqueBasePass
// {
//
//   uint OpaqueBasePass_OpaqueBasePass_Shared_Forward_NumLocalLights;// Offset:    0 Size:     4
//   uint OpaqueBasePass_OpaqueBasePass_Shared_Forward_HasDirectionalLight;// Offset:    8 Size:     4
//   int3 OpaqueBasePass_OpaqueBasePass_Shared_Forward_CulledGridSize;// Offset:   16 Size:    12
//   uint OpaqueBasePass_OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift;// Offset:   32 Size:     4
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_Forward_LightGridZParams;// Offset:   48 Size:    12
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_Forward_DirectionalLightDirection;// Offset:   64 Size:    12
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_Forward_DirectionalLightColor;// Offset:   80 Size:    12
//   uint OpaqueBasePass_OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask;// Offset:   96 Size:     4
//   float2 OpaqueBasePass_OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD;// Offset:  104 Size:     8
//   uint OpaqueBasePass_OpaqueBasePass_Shared_Forward_DirectLightingShowFlag;// Offset:  576 Size:     4
//   uint OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_NumLocalLights;// Offset:  656 Size:     4
//   uint OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_HasDirectionalLight;// Offset:  664 Size:     4
//   int3 OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_CulledGridSize;// Offset:  672 Size:    12
//   uint OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_LightGridPixelSizeShift;// Offset:  688 Size:     4
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_LightGridZParams;// Offset:  704 Size:    12
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_DirectionalLightDirection;// Offset:  720 Size:    12
//   float3 OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_DirectionalLightColor;// Offset:  736 Size:    12
//   uint OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowMapChannelMask;// Offset:  752 Size:     4
//   float2 OpaqueBasePass_OpaqueBasePass_Shared_ForwardISR_DirectionalLightDistanceFadeMAD;// Offset:  760 Size:     8
//   float4 OpaqueBasePass_OpaqueBasePass_Shared_Reflection_SkyLightParameters;// Offset: 1312 Size:    16
//   float OpaqueBasePass_OpaqueBasePass_Shared_Fog_ApplyVolumetricFog;// Offset: 1868 Size:     4
//   uint OpaqueBasePass_OpaqueBasePass_Shared_UseBasePassSkylight;// Offset: 2064 Size:     4
//   int OpaqueBasePass_OpaqueBasePass_UseForwardScreenSpaceShadowMask;// Offset: 2112 Size:     4
//
// }
//
// cbuffer LandscapeParameters
// {
//
//   row_major float4x4 LandscapeParameters_LandscapeParameters_LocalToWorldNoScaling;// Offset:  144 Size:    64
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[16];// Offset:    0 Size:   256
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_MaterialTextureBilinearWrapedSampler    sampler      NA          NA             s0      1 
// View_SharedBilinearClampedSampler    sampler      NA          NA             s1      1 
// OpaqueBasePass_Shared_Reflection_SkyLightCubemapSampler    sampler      NA          NA             s2      1 
// OpaqueBasePass_Shared_Reflection_ReflectionCubemapSampler    sampler      NA          NA             s3      1 
// LandscapeParameters_NormalmapTextureSampler    sampler      NA          NA             s4      1 
// Material_Texture2D_1Sampler       sampler      NA          NA             s5      1 
// Material_Texture2D_3Sampler       sampler      NA          NA             s6      1 
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_SkyIrradianceEnvironmentMap    texture    byte         r/o             t1      1 
// View_VolumetricLightmapIndirectionTexture    texture   uint4          3d             t2      1 
// View_VolumetricLightmapBrickAmbientVector    texture  float4          3d             t3      1 
// View_VolumetricLightmapBrickSHCoefficients0    texture  float4          3d             t4      1 
// View_VolumetricLightmapBrickSHCoefficients1    texture  float4          3d             t5      1 
// View_VolumetricLightmapBrickSHCoefficients2    texture  float4          3d             t6      1 
// View_VolumetricLightmapBrickSHCoefficients3    texture  float4          3d             t7      1 
// View_VolumetricLightmapBrickSHCoefficients4    texture  float4          3d             t8      1 
// View_VolumetricLightmapBrickSHCoefficients5    texture  float4          3d             t9      1 
// View_SkyBentNormalBrickTexture    texture  float4          3d            t10      1 
// View_DirectionalLightShadowingBrickTexture    texture  float4          3d            t11      1 
// OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer    texture  float4         buf            t12      1 
// OpaqueBasePass_Shared_Forward_NumCulledLightsGrid    texture   uint4         buf            t13      1 
// OpaqueBasePass_Shared_Forward_CulledLightDataGrid    texture   uint4         buf            t14      1 
// OpaqueBasePass_Shared_ForwardISR_ForwardLocalLightBuffer    texture  float4         buf            t15      1 
// OpaqueBasePass_Shared_ForwardISR_NumCulledLightsGrid    texture   uint4         buf            t16      1 
// OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid    texture   uint4         buf            t17      1 
// OpaqueBasePass_Shared_Reflection_SkyLightCubemap    texture  float4        cube            t18      1 
// OpaqueBasePass_Shared_Reflection_ReflectionCubemap    texture  float4   cubearray            t19      1 
// OpaqueBasePass_Shared_Fog_IntegratedLightScattering    texture  float4          3d            t20      1 
// OpaqueBasePass_Shared_FogISR_IntegratedLightScattering    texture  float4          3d            t21      1 
// OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture    texture  float4          2d            t22      1 
// OpaqueBasePass_IndirectOcclusionTexture    texture  float4          2d            t23      1 
// OpaqueBasePass_ResolvedSceneDepthTexture    texture  float4          2d            t24      1 
// LandscapeParameters_NormalmapTexture    texture  float4          2d            t25      1 
// Material_Texture2D_0              texture  float4          2d            t26      1 
// Material_Texture2D_1              texture  float4          2d            t27      1 
// Material_Texture2D_2              texture  float4          2d            t28      1 
// Material_Texture2D_3              texture  float4          2d            t29      1 
// View                              cbuffer      NA          NA            cb0      1 
// InstancedView                     cbuffer      NA          NA            cb1      1 
// ReflectionCapture                 cbuffer      NA          NA            cb2      1 
// OpaqueBasePass                    cbuffer      NA          NA            cb3      1 
// LandscapeParameters               cbuffer      NA          NA            cb4      1 
// Material                          cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x   
// PRIMITIVE_ID             0    y          2     NONE    uint    y  
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[239], immediateIndexed
dcl_constantbuffer CB1[183], immediateIndexed
dcl_constantbuffer CB2[1364], dynamicIndexed
dcl_constantbuffer CB3[133], immediateIndexed
dcl_constantbuffer CB4[12], immediateIndexed
dcl_constantbuffer CB5[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_texture3d (uint,uint,uint,uint) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_buffer (float,float,float,float) t12
dcl_resource_buffer (uint,uint,uint,uint) t13
dcl_resource_buffer (uint,uint,uint,uint) t14
dcl_resource_buffer (float,float,float,float) t15
dcl_resource_buffer (uint,uint,uint,uint) t16
dcl_resource_buffer (uint,uint,uint,uint) t17
dcl_resource_texturecube (float,float,float,float) t18
dcl_resource_texturecubearray (float,float,float,float) t19
dcl_resource_texture3d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2d (float,float,float,float) t23
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2d (float,float,float,float) t29
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps constant v2.y
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 30
if_z v2.x
  mov r0.x, cb0[44].x
  mov r0.y, cb0[45].x
  mov r0.z, cb0[46].x
  mov r0.w, cb0[47].x
  mov r1.x, cb0[44].y
  mov r1.y, cb0[45].y
  mov r1.z, cb0[46].y
  mov r1.w, cb0[47].y
  mov r2.x, cb0[44].z
  mov r2.y, cb0[45].z
  mov r2.z, cb0[46].z
  mov r2.w, cb0[47].z
  mov r3.x, cb0[44].w
  mov r3.y, cb0[45].w
  mov r3.z, cb0[46].w
  mov r3.w, cb0[47].w
  mov r4.x, cb0[4].x
  mov r4.y, cb0[5].x
  mov r4.z, cb0[6].x
  mov r4.w, cb0[7].x
  mov r5.x, cb0[4].y
  mov r5.y, cb0[5].y
  mov r5.z, cb0[6].y
  mov r5.w, cb0[7].y
  mov r6.x, cb0[4].w
  mov r6.y, cb0[5].w
  mov r6.z, cb0[6].w
  mov r6.w, cb0[7].w
  mov r7.xyz, cb0[62].xyzx
  mov r8.xyz, cb0[182].xyzx
  mov r9.xyz, -cb0[61].xyzx
  mov r10.xyz, -cb0[60].xyzx
  mov r11.xyz, cb0[72].xyzx
  mov r12.xyzw, cb0[68].xyzw
  mov r13.xy, cb0[124].xyxx
  mov r13.zw, cb0[125].zzzw
  mov r7.w, cb0[31].w
  mov r8.w, cb0[133].w
  mov r9.w, cb0[134].x
  mov r10.w, cb0[134].y
else 
  mov r0.x, cb1[44].x
  mov r0.y, cb1[45].x
  mov r0.z, cb1[46].x
  mov r0.w, cb1[47].x
  mov r1.x, cb1[44].y
  mov r1.y, cb1[45].y
  mov r1.z, cb1[46].y
  mov r1.w, cb1[47].y
  mov r2.x, cb1[44].z
  mov r2.y, cb1[45].z
  mov r2.z, cb1[46].z
  mov r2.w, cb1[47].z
  mov r3.x, cb1[44].w
  mov r3.y, cb1[45].w
  mov r3.z, cb1[46].w
  mov r3.w, cb1[47].w
  mov r4.x, cb1[4].x
  mov r4.y, cb1[5].x
  mov r4.z, cb1[6].x
  mov r4.w, cb1[7].x
  mov r5.x, cb1[4].y
  mov r5.y, cb1[5].y
  mov r5.z, cb1[6].y
  mov r5.w, cb1[7].y
  mov r6.x, cb1[4].w
  mov r6.y, cb1[5].w
  mov r6.z, cb1[6].w
  mov r6.w, cb1[7].w
  mov r7.xyz, cb1[62].xyzx
  mov r8.xyz, cb1[182].xyzx
  mov r9.xyz, -cb1[61].xyzx
  mov r10.xyz, -cb1[60].xyzx
  mov r11.xyz, cb1[72].xyzx
  mov r12.xyzw, cb1[68].xyzw
  mov r13.xy, cb1[124].xyxx
  mov r13.zw, cb1[125].zzzw
  mov r7.w, cb1[31].w
  mov r8.w, cb1[133].w
  mov r9.w, cb1[134].x
  mov r10.w, cb1[134].y
endif 
sample_indexable(texture2d)(float,float,float,float) r14.xy, v1.zwzz, t25.zwxy, s4
mad r14.xy, r14.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r11.w, r14.xyxx, r14.xyxx
add r11.w, -r11.w, l(1.000000)
max r11.w, r11.w, l(0.000000)
sqrt r11.w, r11.w
mul r14.yzw, r14.yyyy, cb4[10].xxyz
mad r14.xyz, r14.xxxx, cb4[9].xyzx, r14.yzwy
mad r14.xyz, r11.wwww, cb4[11].xyzx, r14.xyzx
add r13.xy, -r13.xyxx, v4.xyxx
mad r13.zw, r13.xxxy, r13.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r15.xy, r13.zwzz, v4.wwww
mov r15.z, v4.w
mul r15.xyw, r15.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r16.xyz, v4.xyzx
mov r16.w, l(1.000000)
dp4 r0.x, r16.xyzw, r0.xyzw
dp4 r0.y, r16.xyzw, r1.xyzw
dp4 r0.z, r16.xyzw, r2.xyzw
dp4 r0.w, r16.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r11.xyzx, r0.xyzx
ge r0.w, r7.w, l(1.000000)
dp3 r1.w, -r0.xyzx, -r0.xyzx
rsq r1.w, r1.w
mul r2.xyz, -r0.xyzx, r1.wwww
movc r2.xyz, r0.wwww, -r7.xyzx, r2.xyzx
deriv_rtx_coarse r3.xyz, r1.zxyz
deriv_rty_coarse r7.xyz, r1.yzxy
mul r11.xyz, r3.xyzx, r7.xyzx
mad r3.xyz, r3.zxyz, r7.yzxy, -r11.xyzx
add r0.w, -r8.w, l(1.000000)
mul r7.xyz, r0.wwww, r14.xyzx
mad r3.xyz, r3.xyzx, r8.wwww, r7.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r3.xyzx
mul r11.xyz, -r10.xzyx, cb5[2].wwww
mul r11.xyz, r11.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
frc r11.xyz, r11.xyzx
mad r11.xyz, r1.xzyx, cb5[2].wwww, r11.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, r11.xyxx, t26.xzwy, s0
sample_indexable(texture2d)(float,float,float,float) r2.w, r11.zyzz, t26.xzwy, s0
sample_indexable(texture2d)(float,float,float,float) r3.w, r11.xzxx, t26.xzwy, s0
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, v1.xyxx, t27.xyzw, s5
dp4 r7.w, r11.xyzw, cb5[3].xyzw
mad r7.w, r7.w, l(2.000000), l(-1.000000)
mad_sat r13.zw, |r14.xxxz|, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
add r2.w, -r1.w, r2.w
mad r1.w, r13.z, r2.w, r1.w
add r2.w, -r1.w, r3.w
mad r1.w, r13.w, r2.w, r1.w
add r1.w, r1.w, r7.w
max r1.w, r1.w, l(0.000100)
min r1.w, r1.w, l(1.000000)
dp4 r2.w, r11.xyzw, cb5[4].xyzw
mul r13.zw, v0.xxxy, cb5[5].yyyy
sample_indexable(texture2d)(float,float,float,float) r3.w, r13.zwzz, t28.xzwy, s0
dp4 r7.w, r11.xyzw, cb5[6].xyzw
mad r3.w, r7.w, l(2.000000), r3.w
add r3.w, r3.w, l(-1.000000)
max r3.w, r3.w, l(0.000100)
min r3.w, r3.w, l(1.000000)
add r7.w, r1.w, r2.w
add r7.w, r3.w, r7.w
div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
mul r11.xy, v0.xyxx, cb5[10].wwww
sample_b_indexable(texture2d)(float,float,float,float) r8.w, r11.xyxx, t29.yzwx, s6, cb0[138].x
mad r11.x, r14.z, l(0.500000), l(0.500000)
mad_sat r11.x, r11.x, l(23.000000), l(-20.500000)
ge r11.y, l(0.000000), r8.w
log r8.w, r8.w
mul r8.w, r8.w, cb5[11].x
exp r8.w, r8.w
min r8.w, r8.w, l(1.000000)
movc r8.w, r11.y, l(0), r8.w
div_sat r8.w, r11.x, r8.w
add r11.xyz, -cb5[8].xyzx, cb5[10].xyzx
mad r11.xyz, r8.wwww, r11.xyzx, cb5[8].xyzx
mul r1.w, r1.w, r7.w
mul r2.w, r2.w, r7.w
mul r14.xyz, r2.wwww, cb5[10].xyzx
mad r11.xyz, r11.xyzx, r1.wwww, r14.xyzx
mul r1.w, r3.w, r7.w
mad_sat r11.xyz, cb5[13].xyzx, r1.wwww, r11.xyzx
mad r1.w, r10.w, l(0.850000), r9.w
mad r14.xyz, r10.xyzx, l(-2097152.000000, -2097152.000000, -2097152.000000, 0.000000), r1.xyzx
mad r14.xyz, r14.xyzx, cb0[226].xyzx, cb0[227].xyzx
max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r14.xyz, r14.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r14.xyz, r14.xyzx, cb0[228].xyzx
ftoi r16.xyz, r14.xyzx
mov r16.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r16.xyzw, r16.xyzw, t2.xyzw
utof r16.xyzw, r16.xyzw
add r2.w, l(1.000000), cb0[228].w
div r14.xyz, r14.xyzx, r16.wwww
frc r14.xyz, r14.xyzx
mul r14.xyz, r14.xyzx, cb0[228].wwww
mad r14.xyz, r16.xyzx, r2.wwww, r14.xyzx
add r14.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r14.xyz, r14.xyzx, cb0[229].xyzx
imul null, r2.w, v2.y, l(40)
ishl r3.w, r2.w, l(4)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r7.w, r3.w, t0.xxxx
and r16.xyzw, r7.wwww, l(4, 128, 256, 1024)
if_nz r16.x
  sample_l_indexable(texture3d)(float,float,float,float) r17.x, r14.xyzx, t11.xyzw, s1, l(0.000000)
else 
  mov r17.x, l(1.000000)
endif 
mad r18.xyz, r11.xyzx, cb0[131].wwww, cb0[131].xyzx
mad r19.xyz, cb0[132].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb0[132].xyzx
ne r8.w, l(0.000000), cb0[178].w
mad r20.xyz, r19.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r18.xyzx
movc r18.xyz, r8.wwww, r20.xyzx, r18.xyzx
movc r19.xyz, r8.wwww, l(0,0,0,0), r19.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r14.xyzx, t3.zxyw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r21.xyzw, r14.xyzx, t4.xyzw, s1, l(0.000000)
mad r21.xyzw, r21.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r21.xyzw, r20.yyyy, r21.xyzw
mul r21.xyzw, r21.wxyz, l(3.872979, 1.732051, 1.732051, 1.732051)
sample_l_indexable(texture3d)(float,float,float,float) r22.xyzw, r14.xyzx, t6.xyzw, s1, l(0.000000)
mad r22.xyzw, r22.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r22.xyzw, r20.zzzz, r22.xyzw
mul r22.xyzw, r22.wxyz, l(3.872979, 1.732051, 1.732051, 1.732051)
sample_l_indexable(texture3d)(float,float,float,float) r23.xyzw, r14.xyzx, t8.xyzw, s1, l(0.000000)
mad r23.xyzw, r23.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r23.xyzw, r20.xxxx, r23.xyzw
mul r23.xyzw, r23.wxyz, l(3.872979, 1.732051, 1.732051, 1.732051)
sample_l_indexable(texture3d)(float,float,float,float) r24.xyzw, r14.xyzx, t5.xyzw, s1, l(0.000000)
mad r24.xyzw, r24.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r24.xyzw, r20.yyyy, r24.xyzw
mul r24.xyzw, r24.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
sample_l_indexable(texture3d)(float,float,float,float) r25.xyzw, r14.xyzx, t7.xyzw, s1, l(0.000000)
mad r25.xyzw, r25.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r25.xyzw, r20.zzzz, r25.xyzw
mul r25.xyzw, r25.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
sample_l_indexable(texture3d)(float,float,float,float) r26.xyzw, r14.xyzx, t9.xyzw, s1, l(0.000000)
mad r26.xyzw, r26.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r26.xyzw, r20.xxxx, r26.xyzw
mul r26.xyzw, r26.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r27.xyz, r7.yzxy, r7.yzyy
mul r28.yw, r7.yyyx, r7.zzzz
mul r29.yzw, r7.yyzx, l(0.000000, -1.023328, 1.023328, -1.023328)
mad r28.xz, r27.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r28.xyzw, r28.xyzw, l(0.858085, -0.858085, 0.247708, -0.858085)
mad r8.w, r7.x, r7.x, -r27.x
mul r8.w, r8.w, l(0.429043)
mov r27.x, r20.y
mov r27.yzw, r21.yyzw
mov r29.x, l(0.886228)
dp4 r9.w, r27.xyzw, r29.xyzw
mov r21.yzw, r24.xxyz
dp4 r10.w, r21.xyzw, r28.xyzw
add r9.w, r9.w, r10.w
mad r21.x, r24.w, r8.w, r9.w
mov r24.x, r20.z
mov r24.yzw, r22.yyzw
dp4 r9.w, r24.xyzw, r29.xyzw
mov r22.yzw, r25.xxyz
dp4 r10.w, r22.xyzw, r28.xyzw
add r9.w, r9.w, r10.w
mad r21.y, r25.w, r8.w, r9.w
mov r20.yzw, r23.yyzw
dp4 r9.w, r20.xyzw, r29.xyzw
mov r23.yzw, r26.xxyz
dp4 r10.w, r23.xyzw, r28.xyzw
add r9.w, r9.w, r10.w
mad r21.z, r26.w, r8.w, r9.w
if_nz cb3[129].x
  ne r8.w, l(0.000000), cb0[181].y
  if_nz r8.w
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t10.xyzw, s1, l(0.000000)
    mad r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    dp3 r8.w, r14.xyzx, r14.xyzx
    sqrt r20.y, r8.w
    max r8.w, r20.y, l(0.000100)
    div r14.xyz, r14.xyzx, r8.wwww
    add r8.w, -r20.y, l(1.000000)
    mad r8.w, -r8.w, r8.w, l(1.000000)
    dp3_sat r9.w, r14.xyzx, r7.xyzx
    add r10.w, -r9.w, l(1.000000)
    mad r20.x, r8.w, r10.w, r9.w
    mad r3.xyz, r3.xyzx, r0.wwww, -r14.xyzx
    mad r14.xyz, r8.wwww, r3.xyzx, r14.xyzx
  else 
    mov r20.xy, l(1.000000,1.000000,0,0)
    mov r14.xyz, r7.xyzx
  endif 
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), t1.xyzw
  mov r14.w, l(1.000000)
  dp4 r3.x, r22.xyzw, r14.xyzw
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyzw, l(16), t1.xyzw
  dp4 r3.y, r22.xyzw, r14.xyzw
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyzw, l(32), t1.xyzw
  dp4 r3.z, r22.xyzw, r14.xyzw
  mul r22.xyzw, r14.yzzx, r14.xyzz
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.xyzw, l(48), t1.xyzw
  dp4 r23.x, r23.xyzw, r22.xyzw
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xyzw, l(64), t1.xyzw
  dp4 r23.y, r24.xyzw, r22.xyzw
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xyzw, l(80), t1.xyzw
  dp4 r23.z, r24.xyzw, r22.xyzw
  add r3.xyz, r3.xyzx, r23.xyzx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyz, l(96), t1.xyzx
  mul r0.w, r14.y, r14.y
  mad r0.w, r14.x, r14.x, -r0.w
  mad r3.xyz, r22.xyzx, r0.wwww, r3.xyzx
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyz, r8.xyzx, r3.xyzx
  mul r0.w, r20.x, r20.y
  mul r3.xyz, r0.wwww, r3.xyzx
else 
  mov r3.xyz, l(0,0,0,0)
endif 
max r8.xyz, r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[154].xyzx
mad r3.xyz, r8.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000), r3.xyzx
div r8.xy, r15.xyxx, r15.wwww
mad r8.xy, r8.xyxx, r12.xyxx, r12.wzww
ilt r0.w, l(1), cb0[130].x
if_nz r0.w
  mul r8.zw, r8.xxxy, cb0[127].xxxy
  round_z r8.zw, r8.zzzw
  ftoi r12.xy, r8.zwzz
  mov r12.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r12.xyzz, t24.yzwx
  mad r8.z, r0.w, cb0[67].x, cb0[67].y
  mad r0.w, r0.w, cb0[67].z, -cb0[67].w
  div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  add r0.w, r0.w, r8.z
  mad r0.w, -r15.z, l(1.000000), r0.w
  div r0.w, |r0.w|, r15.w
  lt r0.w, l(0.010000), r0.w
  if_nz r0.w
    mov r14.x, -cb0[127].z
    mov r14.yz, l(0,0,0,0)
    add r8.zw, r8.xxxy, r14.xxxy
    iadd r20.xyzw, r12.xxyy, l(1, -1, 1, -1)
    mov r12.w, r20.y
    ld_indexable(texture2d)(float,float,float,float) r0.w, r12.wyzz, t24.yzwx
    mad r9.w, r0.w, cb0[67].x, cb0[67].y
    mad r0.w, r0.w, cb0[67].z, -cb0[67].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r9.w
    mad r0.w, -r15.z, l(1.000000), r0.w
    lt r9.w, |r0.w|, l(100000000.000000)
    movc r8.zw, r9.wwww, r8.zzzw, r8.xxxy
    min r0.w, |r0.w|, l(100000000.000000)
    mov r14.w, cb0[127].w
    add r13.zw, r8.xxxy, r14.zzzw
    mov r14.xz, r12.xxzx
    mov r14.yw, r20.zzzw
    ld_indexable(texture2d)(float,float,float,float) r9.w, r14.xyzz, t24.yzwx
    mad r10.w, r9.w, cb0[67].x, cb0[67].y
    mad r9.w, r9.w, cb0[67].z, -cb0[67].w
    div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
    add r9.w, r9.w, r10.w
    mad r9.w, -r15.z, l(1.000000), r9.w
    lt r10.w, |r9.w|, r0.w
    movc r8.zw, r10.wwww, r13.zzzw, r8.zzzw
    min r0.w, r0.w, |r9.w|
    mov r21.x, cb0[127].z
    mov r21.yz, l(0,0,0,0)
    add r12.xw, r8.xxxy, r21.xxxy
    mov r20.yzw, r12.yyzz
    ld_indexable(texture2d)(float,float,float,float) r9.w, r20.xyzw, t24.yzwx
    mad r10.w, r9.w, cb0[67].x, cb0[67].y
    mad r9.w, r9.w, cb0[67].z, -cb0[67].w
    div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
    add r9.w, r9.w, r10.w
    mad r9.w, -r15.z, l(1.000000), r9.w
    lt r10.w, |r9.w|, r0.w
    movc r8.zw, r10.wwww, r12.xxxw, r8.zzzw
    mov r21.w, -cb0[127].w
    add r12.xy, r8.xyxx, r21.zwzz
    ld_indexable(texture2d)(float,float,float,float) r10.w, r14.xwzz, t24.yzwx
    mad r11.w, r10.w, cb0[67].x, cb0[67].y
    mad r10.w, r10.w, cb0[67].z, -cb0[67].w
    div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
    add r10.w, r10.w, r11.w
    mad r10.w, -r15.z, l(1.000000), r10.w
    min r0.w, r0.w, |r9.w|
    lt r0.w, |r10.w|, r0.w
    movc r8.xy, r0.wwww, r12.xyxx, r8.zwzz
  endif 
endif 
resinfo_indexable(texture2d)(float,float,float,float)_uint r8.zw, l(0), t23.zwxy
utof r8.zw, r8.zzzw
mul r8.zw, r8.zzzw, r8.xxxy
round_z r8.zw, r8.zzzw
ftoi r12.xy, r8.zwzz
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r12.xyzw, t23.yzwx
movc r12.xyz, r16.yzwy, l(2.000000,1.000000,1,0), l(0,0,0,0)
add r8.z, r12.y, r12.x
mul r8.z, r8.z, l(1.333000)
ftou r8.z, r8.z
and r8.z, r8.z, l(2)
movc r8.z, r8.z, cb0[191].y, l(1.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.w, r8.z, r0.w, l(1.000000)
if_z v2.x
  mov r8.z, cb3[2].x
  mov r8.w, cb3[3].x
  mov r9.w, cb3[3].y
  mov r10.w, cb3[3].z
  mov r11.w, cb3[1].z
else 
  mov r8.z, cb3[43].x
  mov r8.w, cb3[44].x
  mov r9.w, cb3[44].y
  mov r10.w, cb3[44].z
  mov r11.w, cb3[42].z
endif 
mul r12.xy, r13.xyxx, cb0[126].zwzz
ftou r12.xy, r12.xyxx
ushr r12.xy, r12.xyxx, r8.zzzz
if_z v2.x
  mov r13.xy, cb3[1].xyxx
else 
  mov r13.xy, cb3[42].xyxx
endif 
mad r8.z, v4.w, r8.w, r9.w
log r8.z, r8.z
mul r8.z, r10.w, r8.z
max r8.z, r8.z, l(0.000000)
ftou r8.z, r8.z
iadd r8.w, r11.w, l(-1)
umin r8.z, r8.w, r8.z
imad r8.z, r8.z, r13.y, r12.y
imad r8.z, r8.z, r13.x, r12.x
if_nz cb3[132].x
  mul r8.xy, r8.xyxx, cb0[127].xyxx
  round_z r8.xy, r8.xyxx
  ftoi r13.xy, r8.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.xyzw, t22.xyzw
else 
  mov r13.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
mul r13.xyzw, r13.xyzw, r13.xyzw
and r8.xy, r7.wwww, l(2048, 4096, 0, 0)
movc r8.xy, r8.xyxx, l(1,1,0,0), l(0,0,0,0)
imad r7.w, r8.x, l(2), r12.z
imad r7.w, r8.y, l(4), r7.w
if_z v2.x
  mov r8.xyw, cb3[5].xyxz
  mov r12.xyz, cb3[4].xyzx
  mov r9.w, cb3[0].z
  mov r10.w, cb3[6].x
  mov r11.w, cb3[6].z
  mov r12.w, cb3[6].w
else 
  mov r8.xyw, cb3[46].xyxz
  mov r12.xyz, cb3[45].xyzx
  mov r9.w, cb3[41].z
  mov r10.w, cb3[47].x
  mov r11.w, cb3[47].z
  mov r12.w, cb3[47].w
endif 
if_nz r9.w
  and r14.xyzw, r10.wwww, l(1, 2, 4, 8)
  movc r14.xyzw, r14.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
  ushr r15.xy, r10.wwww, l(4, 8, 0, 0)
  ubfe r9.w, l(1), l(4), r10.w
  movc r16.x, r9.w, l(1.000000), l(0)
  and r20.xyz, r15.xxxx, l(2, 4, 8, 0)
  movc r16.yzw, r20.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r9.w, r16.xyzw, r13.xyzw
  lt r15.x, r12.w, l(0.000000)
  movc r15.z, r15.x, l(1.000000), r9.w
  and r10.w, r10.w, l(255)
  movc r10.w, r10.w, l(1), l(0)
  if_nz r10.w
    mad_sat r10.w, r15.w, r11.w, r12.w
    movc r9.w, r15.x, r9.w, l(1.000000)
    mov r17.y, l(1.000000)
    dp4 r11.w, r17.xyyy, r14.xyzw
    dp4 r12.w, r14.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r11.w, r11.w, l(-1.000000)
    mad r11.w, r12.w, r11.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    add r11.w, -r9.w, r11.w
    mad r9.w, r10.w, r11.w, r9.w
    min r10.w, r15.z, r9.w
    mul r14.x, r15.z, r10.w
    mul r14.y, r15.z, r9.w
  else 
    mov r14.xy, l(1.000000,1.000000,0,0)
  endif 
  add r9.w, r14.x, r14.y
  lt r9.w, l(0.000000), r9.w
  if_nz r9.w
    max r9.w, r1.w, cb0[238].z
    dp3 r10.w, r12.xyzx, r12.xyzx
    rsq r10.w, r10.w
    mul r12.xyz, r10.wwww, r12.xyzx
    dp3 r10.w, r7.xyzx, r12.xyzx
    mov_sat r11.w, r10.w
    dp3 r12.w, r7.xyzx, r2.xyzx
    dp3 r12.x, r2.xyzx, r12.xyzx
    mad r12.y, r12.x, l(2.000000), l(2.000000)
    rsq r12.y, r12.y
    add r10.w, r10.w, r12.w
    mul_sat r10.w, r12.y, r10.w
    add r12.z, |r12.w|, l(0.000010)
    min r12.z, r12.z, l(1.000000)
    mul r12.w, r9.w, r9.w
    mul r14.x, r12.w, r12.w
    mad r14.z, r10.w, r14.x, -r10.w
    mad r10.w, r14.z, r10.w, l(1.000000)
    mad r9.w, -r9.w, r9.w, l(1.000000)
    mad_sat r12.x, r12.y, r12.x, r12.y
    add r12.x, -r12.x, l(1.000000)
    mul r12.y, r12.x, r12.x
    mul r12.y, r12.y, r12.y
    mul r14.z, r12.x, r12.y
    mul r8.xyw, r8.xyxw, r14.yyyy
    mul r15.xzw, r11.wwww, r18.xxyz
    mul r15.xzw, r8.xxyw, r15.xxzw
    mul r15.xzw, r15.xxzw, l(0.318310, 0.000000, 0.318310, 0.318310)
    mul_sat r14.y, r19.y, l(50.000000)
    mad r12.x, -r12.y, r12.x, l(1.000000)
    mul r16.xyz, r12.xxxx, r19.xyzx
    mad r14.yzw, r14.yyyy, r14.zzzz, r16.xxyz
    mul r10.w, r10.w, r10.w
    mul r10.w, r10.w, l(3.141593)
    div r10.w, r14.x, r10.w
    mad r12.x, r12.z, r9.w, r12.w
    mad r9.w, r11.w, r9.w, r12.w
    mul r9.w, r9.w, r12.z
    mad r9.w, r11.w, r12.x, r9.w
    div r9.w, l(0.500000), r9.w
    mul r9.w, r9.w, r10.w
    mul r12.xyz, r9.wwww, r14.yzwy
    mul r12.xyz, r11.wwww, r12.xyzx
    mul r8.xyw, r8.xyxw, r12.xyxz
  else 
    mov r15.xzw, l(0,0,0,0)
    mov r8.xyw, l(0,0,0,0)
  endif 
  and r9.w, r7.w, r15.y
  movc r12.xyz, r9.wwww, r15.xzwx, l(0,0,0,0)
  movc r8.xyw, r9.wwww, r8.xyxw, l(0,0,0,0)
else 
  mov r12.xyz, l(0,0,0,0)
  mov r8.xyw, l(0,0,0,0)
endif 
if_z v2.x
  ishl r9.w, r8.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t13.yzwx
  umin r9.w, r9.w, cb3[0].x
  bfi r10.w, l(31), l(1), r8.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t13.yzwx
else 
  ishl r11.w, r8.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t16.yzwx
  umin r9.w, r11.w, cb3[41].x
  bfi r8.z, l(31), l(1), r8.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r8.zzzz, t16.yzwx
endif 
movc r8.z, v2.x, cb3[41].x, cb3[0].x
umin r8.z, r8.z, r9.w
max r9.w, r1.w, cb0[238].z
dp3 r11.w, -r2.xyzx, r7.xyzx
add r11.w, r11.w, r11.w
mad r14.xyz, r7.xyzx, -r11.wwww, -r2.xyzx
max r11.w, r9.w, cb0[238].z
mad r11.w, -r11.w, r11.w, l(1.000000)
dp3 r12.w, r7.xyzx, r2.xyzx
add r14.w, r12.w, r12.w
mad r15.x, r14.w, r12.w, l(-1.000000)
add r15.y, |r12.w|, l(0.000010)
min r15.y, r15.y, l(1.000000)
mul r9.w, r9.w, r9.w
mul r15.z, r9.w, r9.w
mul r15.w, r19.y, l(50.000000)
mov_sat r15.w, r15.w
mul r16.xyz, r18.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
mov r17.z, l(1.000000)
mov r20.x, l(1.000000)
mov r21.xyz, r12.xyzx
mov r22.xyz, r8.xywx
mov r16.w, l(0)
loop 
  uge r17.y, r16.w, r8.z
  breakc_nz r17.y
  iadd r17.y, r10.w, r16.w
  if_z v2.x
    ld_indexable(buffer)(uint,uint,uint,uint) r17.w, r17.yyyy, t14.yzwx
    imul null, r18.w, r17.w, l(6)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r18.wwww, t12.xyzw
    imad r18.w, r17.w, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r18.wwww, t12.xyzw
    imad r25.xyz, r17.wwww, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r26.xyzw, r25.xxxx, t12.xyzw
    ld_indexable(buffer)(float,float,float,float) r27.xyzw, r25.yyyy, t12.xyzw
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r25.zzzz, t12.xyzw
  else 
    ld_indexable(buffer)(uint,uint,uint,uint) r17.y, r17.yyyy, t17.yxzw
    imul null, r17.w, r17.y, l(6)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r17.wwww, t15.xyzw
    imad r17.w, r17.y, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r17.wwww, t15.xyzw
    imad r28.xyz, r17.yyyy, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r26.xyzw, r28.xxxx, t15.xyzw
    ld_indexable(buffer)(float,float,float,float) r27.xyzw, r28.yyyy, t15.xyzw
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r28.zzzz, t15.xyzw
  endif 
  eq r17.y, r24.w, l(0.000000)
  add r23.xyz, -r0.xyzx, r23.xyzx
  dp3 r17.w, r23.xyzx, r23.xyzx
  mul r18.w, r23.w, r23.w
  mul r18.w, r17.w, r18.w
  mad r18.w, -r18.w, r18.w, l(1.000000)
  max r18.w, r18.w, l(0.000000)
  mul r18.w, r18.w, r18.w
  mul r28.xyz, r23.wwww, r23.xyzx
  dp3 r19.w, r28.xyzx, r28.xyzx
  min r19.w, r19.w, l(1.000000)
  add r19.w, -r19.w, l(1.000000)
  log r19.w, r19.w
  mul r19.w, r19.w, r24.w
  exp r19.w, r19.w
  movc r18.w, r17.y, r18.w, r19.w
  lt r19.w, l(-2.000000), r26.x
  rsq r17.w, r17.w
  mul r28.xyz, r17.wwww, r23.xyzx
  dp3 r17.w, r28.xyzx, r27.xyzx
  add r17.w, -r26.x, r17.w
  mul_sat r17.w, r26.y, r17.w
  mul r17.w, r17.w, r17.w
  mul r17.w, r17.w, r18.w
  movc r17.w, r19.w, r17.w, r18.w
  lt r18.w, l(0.000000), r17.w
  if_nz r18.w
    and r18.w, r27.w, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r28.xyzw, r27.wwww, l(1, 2, 4, 8)
      movc r28.xyzw, r28.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r27.w, l(4)
      ubfe r19.w, l(1), l(4), r27.w
      movc r29.x, r19.w, l(1.000000), l(0)
      and r27.xyz, r18.wwww, l(2, 4, 8, 0)
      movc r29.yzw, r27.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r29.xyzw, r13.xyzw
      dp4 r19.w, r17.xzzz, r28.xyzw
      dp4 r20.z, r28.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r19.w, r19.w, l(-1.000000)
      mad r19.w, r20.z, r19.w, l(1.000000)
      mul r18.w, r18.w, r19.w
    else 
      mov r18.w, l(1.000000)
    endif 
    lt r19.w, l(0.000000), r18.w
    if_nz r19.w
      and r19.w, r26.w, l(0x0000ffff)
      f16tof32 r19.w, r19.w
      mul r20.z, r19.w, l(0.500000)
      mad r26.xyw, -r25.xyxz, r20.zzzz, r23.xyxz
      mad r23.xyz, r25.xyzx, r20.zzzz, r23.xyzx
      lt r20.z, l(0.000000), r19.w
      if_nz r20.z
        dp3 r20.w, r26.xywx, r26.xywx
        rsq r20.w, r20.w
        dp3 r21.w, r23.xyzx, r23.xyzx
        rsq r21.w, r21.w
        mul r22.w, r20.w, r21.w
        dp3 r23.w, r26.xywx, r23.xyzx
        mul r23.w, r22.w, r23.w
        dp3 r24.w, r7.xyzx, r26.xywx
        dp3 r25.x, r7.xyzx, r23.xyzx
        mul r21.w, r21.w, r25.x
        mad r20.w, r24.w, r20.w, r21.w
        mul r20.w, r20.w, l(0.500000)
        mad r21.w, r23.w, l(0.500000), r22.w
        add r21.w, r21.w, l(0.500000)
        div r21.w, r22.w, r21.w
      else 
        dp3 r22.w, r26.xywx, r26.xywx
        rsq r24.w, r22.w
        mul r25.xyz, r24.wwww, r26.xywx
        dp3 r20.w, r7.xyzx, r25.xyzx
        add r22.w, r22.w, l(1.000000)
        div r21.w, l(1.000000, 1.000000, 1.000000, 1.000000), r22.w
        mov r23.w, l(1.000000)
      endif 
      lt r22.w, l(0.000000), r26.z
      mul r24.w, r26.z, r26.z
      mul_sat r24.w, r21.w, r24.w
      sqrt r24.w, r24.w
      lt r25.x, r20.w, r24.w
      max r25.y, r20.w, -r24.w
      add r25.y, r24.w, r25.y
      mul r25.y, r25.y, r25.y
      mul r24.w, r24.w, l(4.000000)
      div r24.w, r25.y, r24.w
      movc r24.w, r25.x, r24.w, r20.w
      movc_sat r20.w, r22.w, r24.w, r20.w
      add r23.xyz, -r26.xywx, r23.xyzx
      dp3 r22.w, r14.xyzx, r23.xyzx
      mad r25.xyz, r14.xyzx, r22.wwww, -r23.xyzx
      dp3 r24.w, r26.xywx, r25.xyzx
      mul r22.w, r22.w, r22.w
      mad r19.w, r19.w, r19.w, -r22.w
      div_sat r19.w, r24.w, r19.w
      mad r23.xyz, r23.xyzx, r19.wwww, r26.xywx
      movc r23.xyz, r20.zzzz, r23.xyzx, r26.xywx
      dp3 r19.w, r23.xyzx, r23.xyzx
      rsq r19.w, r19.w
      mul r23.xyz, r19.wwww, r23.xyzx
      mul r20.z, r19.w, r26.z
      mul_sat r20.z, r11.w, r20.z
      mul_sat r19.w, r19.w, r25.w
      dp3 r22.w, r7.xyzx, r23.xyzx
      dp3 r23.x, r2.xyzx, r23.xyzx
      mad r23.y, r23.x, l(2.000000), l(2.000000)
      rsq r23.y, r23.y
      lt r23.z, l(0.000000), r20.z
      if_nz r23.z
        mad r24.w, -r20.z, r20.z, l(1.000000)
        sqrt r24.w, r24.w
        dp2 r25.x, r12.wwww, r22.wwww
        add r25.y, -r23.x, r25.x
        ge r25.z, r25.y, r24.w
        if_nz r25.z
          mov r25.z, l(1.000000)
          mov r25.w, |r12.w|
        else 
          mad r26.x, -r25.y, r25.y, l(1.000000)
          rsq r26.x, r26.x
          mul r26.x, r20.z, r26.x
          mad r26.y, -r25.y, r22.w, r12.w
          mul r26.z, r26.y, r26.x
          mad r25.y, -r25.y, r23.x, r15.x
          mul r26.w, r22.w, r22.w
          mad r26.w, -r12.w, r12.w, -r26.w
          add r26.w, r26.w, l(1.000000)
          mad r26.w, -r23.x, r23.x, r26.w
          mad_sat r25.x, r25.x, r23.x, r26.w
          sqrt r25.x, r25.x
          mul r25.xy, r25.xyxx, r26.xxxx
          mul r26.w, r12.w, r25.x
          add r27.x, r26.w, r26.w
          mad r27.y, r22.w, r24.w, r12.w
          mad r26.x, r26.x, r26.y, r27.y
          mad r26.y, r23.x, r24.w, r25.y
          add r26.y, r26.y, l(1.000000)
          mul r27.z, r25.x, r26.y
          mul r28.x, r26.y, r26.x
          mul r28.y, r26.x, r27.x
          mul r26.w, r26.w, r26.x
          mul r26.w, r26.w, l(0.500000)
          mad r26.w, r27.z, l(-0.500000), r26.w
          mad r28.z, -r27.z, l(2.000000), r28.y
          mul r28.y, r28.z, r28.y
          mad r27.z, r27.z, r27.z, r28.y
          mul r28.y, r26.y, r26.y
          mad r26.y, r23.x, r24.w, r26.y
          mad r26.y, r26.y, l(-0.500000), l(-0.500000)
          mul r26.yw, r26.yyyw, r28.xxxx
          mad r26.y, r27.y, r28.y, r26.y
          mad r26.x, r26.x, r26.y, r27.z
          add r26.y, r26.w, r26.w
          mul r27.y, r26.w, r26.w
          mad r27.y, r26.x, r26.x, r27.y
          div r26.y, r26.y, r27.y
          mul r26.x, r26.x, r26.y
          mad r26.y, -r26.y, r26.w, l(1.000000)
          mul r26.w, r27.x, r26.x
          mad r25.y, r26.y, r25.y, r26.w
          mad r25.y, r23.x, r24.w, r25.y
          mad r26.w, r25.y, l(2.000000), l(2.000000)
          rsq r26.w, r26.w
          mul r25.x, r25.x, r26.x
          mad r25.x, r26.y, r26.z, r25.x
          mad r24.w, r22.w, r24.w, r25.x
          add r24.w, r12.w, r24.w
          mul_sat r25.z, r26.w, r24.w
          mad_sat r25.w, r26.w, r25.y, r26.w
        endif 
      else 
        add r22.w, r12.w, r22.w
        mul_sat r25.z, r23.y, r22.w
        mad_sat r25.w, r23.y, r23.x, r23.y
      endif 
      movc r17.y, r17.y, r21.w, l(1.000000)
      mul r17.y, r20.w, r17.y
      lt r21.w, l(0.000000), r19.w
      mul r19.w, r19.w, r19.w
      mad r22.w, r25.w, l(3.600000), l(0.400000)
      div r19.w, r19.w, r22.w
      mad r19.w, r9.w, r9.w, r19.w
      min r19.w, r19.w, l(1.000000)
      movc r20.y, r21.w, r19.w, r15.z
      mul r19.w, r20.z, l(0.250000)
      ishr r21.w, r20.y, l(1)
      iadd r21.w, r21.w, l(0x1fbd1df5)
      mad r20.z, r21.w, l(3.000000), r20.z
      mul r19.w, r19.w, r20.z
      add r20.z, r25.w, l(0.001000)
      div r19.w, r19.w, r20.z
      add r23.y, r19.w, r20.y
      div r23.x, r20.y, r23.y
      movc r23.xy, r23.zzzz, r23.xyxx, r20.xyxx
      lt r19.w, r23.w, l(1.000000)
      add r21.w, -r23.w, l(1.000100)
      add r22.w, r23.w, l(1.000000)
      div r21.w, r21.w, r22.w
      sqrt r21.w, r21.w
      mul r22.w, r21.w, l(0.250000)
      ishr r23.z, r23.y, l(1)
      iadd r23.z, r23.z, l(0x1fbd1df5)
      mad r21.w, r23.z, l(3.000000), r21.w
      mul r21.w, r21.w, r22.w
      div r20.z, r21.w, r20.z
      add r20.z, r20.z, r23.y
      div r20.z, r23.y, r20.z
      sqrt r20.z, r20.z
      mul r20.z, r20.z, r23.x
      movc r19.w, r19.w, r20.z, r23.x
      mad r20.z, r25.z, r20.y, -r25.z
      mad r20.z, r20.z, r25.z, l(1.000000)
      sqrt r21.w, r20.y
      add r22.w, -r21.w, l(1.000000)
      add r23.x, -r25.w, l(1.000000)
      mul r23.y, r23.x, r23.x
      mul r23.y, r23.y, r23.y
      mul r23.z, r23.x, r23.y
      mad r23.x, -r23.y, r23.x, l(1.000000)
      mul r23.xyw, r19.xyxz, r23.xxxx
      mad r23.xyz, r15.wwww, r23.zzzz, r23.xywx
      mul r20.z, r20.z, r20.z
      mul r20.z, r20.z, l(3.141593)
      div r20.y, r20.y, r20.z
      mul r19.w, r19.w, r20.y
      mad r20.y, r15.y, r22.w, r21.w
      mad r20.z, r20.w, r22.w, r21.w
      mul r20.z, r15.y, r20.z
      mad r20.y, r20.w, r20.y, r20.z
      div r20.y, l(0.500000), r20.y
      mul r19.w, r19.w, r20.y
      mul r20.yzw, r19.wwww, r23.xxyz
      mul r20.yzw, r17.yyyy, r20.yyzw
      mul r23.xyz, r17.wwww, r24.xyzx
      mul r23.xyz, r18.wwww, r23.xyzx
      mul r24.xyz, r16.xyzx, r17.yyyy
      mul r24.xyz, r23.xyzx, r24.xyzx
      mul r20.yzw, r20.yyzw, r23.xxyz
    else 
      mov r24.xyz, l(0,0,0,0)
      mov r20.yzw, l(0,0,0,0)
    endif 
  else 
    mov r24.xyz, l(0,0,0,0)
    mov r20.yzw, l(0,0,0,0)
  endif 
  ushr r17.y, r27.w, l(8)
  and r17.y, r7.w, r17.y
  add r23.xyz, r21.xyzx, r24.xyzx
  add r20.yzw, r20.yyzw, r22.xxyz
  movc r21.xyz, r17.yyyy, r23.xyzx, r21.xyzx
  movc r22.xyz, r17.yyyy, r20.yzwy, r22.xyzx
  iadd r16.w, r16.w, l(1)
endloop 
bfi r0.x, l(28), l(4), r2.w, l(12)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.x, r0.x, t0.xxxx
mad r2.xyz, r7.xyzx, r14.wwww, -r2.xyzx
max r0.y, r1.w, l(0.001000)
log r0.y, r0.y
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r0.z, l(-1.000000), cb0[190].z
add r0.z, -r0.y, r0.z
mov r2.w, cb2[r0.x + 682].y
sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyzw, r2.xyzw, t19.xyzw, s3, r0.z
add r0.z, -r7.w, l(1.000000)
mul r7.xyz, r7.xyzx, cb2[r0.x + 682].xxxx
mul r7.xyz, r7.xyzx, cb0[155].xyzx
lt r2.w, l(0.000000), cb3[82].y
if_nz r2.w
  add r0.y, -r0.y, cb3[82].x
  add r0.y, r0.y, l(-1.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t18.xyzw, s2, r0.y
  mul r2.xyz, r2.xyzx, cb0[182].xyzx
  lt r0.y, cb3[82].z, l(1.000000)
  mad r8.xyz, r2.xyzx, r0.zzzz, r7.xyzx
  movc r7.xyz, r0.yyyy, r8.xyzx, r7.xyzx
  movc r2.xyz, r0.yyyy, l(0,0,0,0), r2.xyzx
else 
  mov r2.xyz, l(0,0,0,0)
endif 
mad r8.xyzw, r1.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r8.x, r8.x
mov_sat r12.w, r12.w
mul r2.w, r12.w, l(-9.280000)
exp r2.w, r2.w
min r0.y, r0.y, r2.w
mad r0.y, r0.y, r8.x, r8.y
mad r8.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r8.zwzz
lt r0.y, l(0.000000), cb3[116].w
if_nz r0.y
  add r9.xyz, r9.xyzx, -r10.xyzx
  mad r9.xyz, r9.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
  mov r9.w, l(1.000000)
  dp4 r4.x, r9.xyzw, r4.xyzw
  dp4 r4.y, r9.xyzw, r5.xyzw
  dp4 r0.y, r9.xyzw, r6.xyzw
  div r4.xy, r4.xyxx, r0.yyyy
  mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.y, r0.y, cb0[224].x, cb0[224].y
  log r0.y, r0.y
  mul r0.y, r0.y, cb0[224].z
  mul r4.z, r0.y, cb0[223].z
  if_z v2.x
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t20.xyzw, s1, l(0.000000)
  else 
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t21.xyzw, s1, l(0.000000)
  endif 
  mul r4.x, r5.w, v3.w
  mad r4.yzw, v3.xxyz, r5.wwww, r5.xxyz
else 
  mov r4.xyzw, v3.wxyz
endif 
mul r5.xyz, cb5[1].yzwy, cb5[1].xxxx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), cb0[135].x
if_nz r0.y
  iadd r0.y, r3.w, l(16)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r6.xyz, r0.y, t0.xyzx
  add r6.xyz, -r6.xyzx, -r10.xyzx
  iadd r9.xyzw, r3.wwww, l(304, 288, 400, 416)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.xyz, r9.x, t0.xyzx
  add r12.xyz, r1.xyzx, -r12.xyzx
  mad r6.xyz, r6.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r12.xyzx
  or r9.xyz, r9.yzwy, l(44, 28, 44, 0)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.x, r9.x, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.y, r9.y, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.z, r9.z, t0.xxxx
  add r9.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r9.xyzx, |r6.xyzx|
  or r0.y, r6.y, r6.x
  or r0.y, r6.z, r0.y
  add r2.w, -r10.y, -r10.x
  add r2.w, -r10.z, r2.w
  mul r2.w, r2.w, l(2420.113525)
  frc r2.w, r2.w
  add r1.x, r1.y, r1.x
  add r1.x, r1.z, r1.x
  mad r1.x, r1.x, l(0.001154), r2.w
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r5.xyz, r0.yyyy, r1.xyzx, r5.xyzx
endif 
movc r1.xyz, cb3[36].xxxx, r21.xyzx, l(0,0,0,0)
movc r6.xyz, cb3[36].xxxx, r22.xyzx, l(0,0,0,0)
add r1.xyz, r1.xyzx, r6.xyzx
dp3 r0.y, r3.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.y, r0.w, r0.y
dp3 r2.w, cb0[155].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r2.w, cb2[r0.x + 1023].w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb0[192].z
mad_sat r0.y, r1.w, cb0[192].x, cb0[192].y
mad r1.w, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r1.w
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.y, r0.x, l(1.000000)
mul r2.xyz, r0.zzzz, r2.xyzx
mad r0.xyz, r7.xyzx, r0.xxxx, r2.xyzx
mul r1.w, r8.y, r15.w
mad r2.xyz, r19.xyzx, r8.xxxx, r1.wwww
mul r0.xyz, r0.xyzx, r2.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
mad r2.xyz, r19.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r19.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r19.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mad r1.xyz, r19.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r18.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, cb0[140].xxxx, r1.xyzx, r0.xyzx
mul r1.xyz, r0.wwww, r3.xyzx
mul r1.xyz, r18.xyzx, r1.xyzx
mad r2.xyz, r11.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r11.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r11.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
add r0.xyz, r5.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r4.xxxx, r4.yzwy
mul o0.xyz, r0.xyzx, cb0[130].yyyy
mov o0.w, l(0)
ret 
// Approximately 986 instruction slots used
