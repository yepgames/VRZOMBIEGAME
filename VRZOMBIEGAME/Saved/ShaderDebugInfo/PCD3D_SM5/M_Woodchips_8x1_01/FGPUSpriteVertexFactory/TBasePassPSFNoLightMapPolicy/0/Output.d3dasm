//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 View_View_ViewForward;      // Offset:  992 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 View_View_ViewRectMin;      // Offset: 1984 Size:    16
//   float4 View_View_LightProbeSizeRatioAndInvSizeRatio;// Offset: 2016 Size:    16
//   float View_View_PreExposure;       // Offset: 2084 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2096 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2112 Size:    16
//   float4 View_View_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 View_View_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//   float View_View_OutOfBoundsMask;   // Offset: 2160 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2208 Size:     4
//   float View_View_UnlitViewmodeMask; // Offset: 2240 Size:     4
//   float3 View_View_PrecomputedIndirectSpecularColorScale;// Offset: 2480 Size:    12
//   float View_View_RenderingReflectionCaptureMask;// Offset: 2860 Size:     4
//   float View_View_ReflectionCubemapMaxMip;// Offset: 3048 Size:     4
//   float3 View_View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;// Offset: 3072 Size:    12
//   float3 View_View_VolumetricFogInvGridSize;// Offset: 3568 Size:    12
//   float3 View_View_VolumetricFogGridZParams;// Offset: 3584 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVScale;// Offset: 3616 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVAdd;// Offset: 3632 Size:    12
//   float3 View_View_VolumetricLightmapIndirectionTextureSize;// Offset: 3648 Size:    12
//   float View_View_VolumetricLightmapBrickSize;// Offset: 3660 Size:     4
//   float3 View_View_VolumetricLightmapBrickTexelSize;// Offset: 3664 Size:    12
//
// }
//
// cbuffer InstancedView
// {
//
//   row_major float4x4 InstancedView_InstancedView_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 InstancedView_InstancedView_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 InstancedView_InstancedView_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 InstancedView_InstancedView_ViewTilePosition;// Offset:  960 Size:    12
//   float3 InstancedView_InstancedView_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 InstancedView_InstancedView_ViewForward;// Offset:  992 Size:    12
//   float3 InstancedView_InstancedView_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 InstancedView_InstancedView_ViewRectMin;// Offset: 1984 Size:    16
//   float4 InstancedView_InstancedView_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 InstancedView_InstancedView_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//
// }
//
// cbuffer ReflectionCapture
// {
//
//   float4 ReflectionCapture_ReflectionCapture_CaptureProperties[341];// Offset: 10912 Size:  5456
//
// }
//
// cbuffer Primitive
// {
//
//   uint Primitive_Primitive_Flags;    // Offset:    0 Size:     4
//   int Primitive_Primitive_SingleCaptureIndex;// Offset:   12 Size:     4
//   float3 Primitive_Primitive_TilePosition;// Offset:   16 Size:    12
//   float Primitive_Primitive_ObjectBoundsX;// Offset:  300 Size:     4
//   float4 Primitive_Primitive_ObjectRelativeWorldPositionAndRadius;// Offset:  304 Size:    16
//   float Primitive_Primitive_ObjectBoundsY;// Offset:  412 Size:     4
//   float Primitive_Primitive_ObjectBoundsZ;// Offset:  428 Size:     4
//
// }
//
// cbuffer TranslucentBasePass
// {
//
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_NumLocalLights;// Offset:    0 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_HasDirectionalLight;// Offset:    8 Size:     4
//   int3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_CulledGridSize;// Offset:   16 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_LightGridPixelSizeShift;// Offset:   32 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_LightGridZParams;// Offset:   48 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightDirection;// Offset:   64 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightColor;// Offset:   80 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask;// Offset:   96 Size:     4
//   float2 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD;// Offset:  104 Size:     8
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_NumDirectionalLightCascades;// Offset:  112 Size:     4
//   int TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightVSM;// Offset:  116 Size:     4
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_CascadeEndDepths;// Offset:  128 Size:    16
//   row_major float4x4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix[4];// Offset:  144 Size:   256
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapMinMax[4];// Offset:  400 Size:    64
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize;// Offset:  464 Size:    16
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectLightingShowFlag;// Offset:  576 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_NumLocalLights;// Offset:  656 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_HasDirectionalLight;// Offset:  664 Size:     4
//   int3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_CulledGridSize;// Offset:  672 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_LightGridPixelSizeShift;// Offset:  688 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_LightGridZParams;// Offset:  704 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightDirection;// Offset:  720 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightColor;// Offset:  736 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowMapChannelMask;// Offset:  752 Size:     4
//   float2 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightDistanceFadeMAD;// Offset:  760 Size:     8
//   float TranslucentBasePass_TranslucentBasePass_Shared_Fog_ApplyVolumetricFog;// Offset: 1868 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_TranslucencyGIGridZParams;// Offset: 2960 Size:    12
//   int3 TranslucentBasePass_TranslucentBasePass_TranslucencyGIGridSize;// Offset: 2976 Size:    12
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[3];// Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_SharedBilinearClampedSampler    sampler      NA          NA             s0      1 
// TranslucentBasePass_Shared_Forward_ShadowmapSampler    sampler      NA          NA             s1      1 
// TranslucentBasePass_Shared_Reflection_ReflectionCubemapSampler    sampler      NA          NA             s2      1 
// TranslucentBasePass_TranslucencyGIVolumeSampler    sampler      NA          NA             s3      1 
// Material_Texture2D_0Sampler       sampler      NA          NA             s4      1 
// Material_Texture2D_1Sampler       sampler      NA          NA             s5      1 
// VirtualShadowMap_ProjectionData    texture    byte         r/o             t0      1 
// VirtualShadowMap_PageTable        texture    byte         r/o             t1      1 
// View_VolumetricLightmapIndirectionTexture    texture   uint4          3d             t2      1 
// View_DirectionalLightShadowingBrickTexture    texture  float4          3d             t3      1 
// TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlas    texture  float4          2d             t4      1 
// TranslucentBasePass_Shared_Forward_ForwardLocalLightBuffer    texture  float4         buf             t5      1 
// TranslucentBasePass_Shared_Forward_NumCulledLightsGrid    texture   uint4         buf             t6      1 
// TranslucentBasePass_Shared_Forward_CulledLightDataGrid    texture   uint4         buf             t7      1 
// TranslucentBasePass_Shared_ForwardISR_ForwardLocalLightBuffer    texture  float4         buf             t8      1 
// TranslucentBasePass_Shared_ForwardISR_NumCulledLightsGrid    texture   uint4         buf             t9      1 
// TranslucentBasePass_Shared_ForwardISR_CulledLightDataGrid    texture   uint4         buf            t10      1 
// TranslucentBasePass_Shared_Reflection_ReflectionCubemap    texture  float4   cubearray            t11      1 
// TranslucentBasePass_Shared_Fog_IntegratedLightScattering    texture  float4          3d            t12      1 
// TranslucentBasePass_Shared_FogISR_IntegratedLightScattering    texture  float4          3d            t13      1 
// TranslucentBasePass_TranslucencyGIVolumeHistory0    texture  float4          3d            t14      1 
// TranslucentBasePass_TranslucencyGIVolumeHistory1    texture  float4          3d            t15      1 
// VirtualShadowMap_PhysicalPagePool    texture   uint4          2d            t16      1 
// Material_Texture2D_0              texture  float4          2d            t17      1 
// Material_Texture2D_1              texture  float4          2d            t18      1 
// View                              cbuffer      NA          NA            cb0      1 
// InstancedView                     cbuffer      NA          NA            cb1      1 
// ReflectionCapture                 cbuffer      NA          NA            cb2      1 
// Primitive                         cbuffer      NA          NA            cb3      1 
// TranslucentBasePass               cbuffer      NA          NA            cb4      1 
// Material                          cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 5   xyzw        1     NONE   float   xyzw
// TANGENTX                 0   xyzw        2     NONE   float   xyz 
// TANGENTZ                 0   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[230], immediateIndexed
dcl_constantbuffer CB1[135], immediateIndexed
dcl_constantbuffer CB2[1023], dynamicIndexed
dcl_constantbuffer CB3[27], immediateIndexed
dcl_constantbuffer CB4[187], dynamicIndexed
dcl_constantbuffer CB5[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_texture3d (uint,uint,uint,uint) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_buffer (float,float,float,float) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (uint,uint,uint,uint) t10
dcl_resource_texturecubearray (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t14
dcl_resource_texture3d (float,float,float,float) t15
dcl_resource_texture2d (uint,uint,uint,uint) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_temps 29
if_z v4.x
  mov r0.x, cb0[44].x
  mov r0.y, cb0[45].x
  mov r0.z, cb0[46].x
  mov r0.w, cb0[47].x
  mov r1.x, cb0[44].y
  mov r1.y, cb0[45].y
  mov r1.z, cb0[46].y
  mov r1.w, cb0[47].y
  mov r2.x, cb0[44].z
  mov r2.y, cb0[45].z
  mov r2.z, cb0[46].z
  mov r2.w, cb0[47].z
  mov r3.x, cb0[44].w
  mov r3.y, cb0[45].w
  mov r3.z, cb0[46].w
  mov r3.w, cb0[47].w
  mov r4.x, cb0[4].x
  mov r4.y, cb0[5].x
  mov r4.z, cb0[6].x
  mov r4.w, cb0[7].x
  mov r5.x, cb0[4].y
  mov r5.y, cb0[5].y
  mov r5.z, cb0[6].y
  mov r5.w, cb0[7].y
  mov r6.x, cb0[4].w
  mov r6.y, cb0[5].w
  mov r6.z, cb0[6].w
  mov r6.w, cb0[7].w
  mov r7.xyz, cb0[62].xyzx
  mov r9.xyz, -cb0[61].xyzx
  mov r10.xyz, -cb0[60].xyzx
  mov r11.xyz, cb0[72].xyzx
  mov r12.xy, cb0[124].xyxx
  mov r7.w, cb0[31].w
  mov r8.xyzw, cb0[133].xyzw
  mov r9.w, cb0[134].x
  mov r10.w, cb0[134].y
else 
  mov r0.x, cb1[44].x
  mov r0.y, cb1[45].x
  mov r0.z, cb1[46].x
  mov r0.w, cb1[47].x
  mov r1.x, cb1[44].y
  mov r1.y, cb1[45].y
  mov r1.z, cb1[46].y
  mov r1.w, cb1[47].y
  mov r2.x, cb1[44].z
  mov r2.y, cb1[45].z
  mov r2.z, cb1[46].z
  mov r2.w, cb1[47].z
  mov r3.x, cb1[44].w
  mov r3.y, cb1[45].w
  mov r3.z, cb1[46].w
  mov r3.w, cb1[47].w
  mov r4.x, cb1[4].x
  mov r4.y, cb1[5].x
  mov r4.z, cb1[6].x
  mov r4.w, cb1[7].x
  mov r5.x, cb1[4].y
  mov r5.y, cb1[5].y
  mov r5.z, cb1[6].y
  mov r5.w, cb1[7].y
  mov r6.x, cb1[4].w
  mov r6.y, cb1[5].w
  mov r6.z, cb1[6].w
  mov r6.w, cb1[7].w
  mov r7.xyz, cb1[62].xyzx
  mov r9.xyz, -cb1[61].xyzx
  mov r10.xyz, -cb1[60].xyzx
  mov r11.xyz, cb1[72].xyzx
  mov r12.xy, cb1[124].xyxx
  mov r7.w, cb1[31].w
  mov r8.xyzw, cb1[133].xyzw
  mov r9.w, cb1[134].x
  mov r10.w, cb1[134].y
endif 
mov r13.xyz, v6.xyzx
mov r13.w, l(1.000000)
dp4 r0.x, r13.xyzw, r0.xyzw
dp4 r0.y, r13.xyzw, r1.xyzw
dp4 r0.z, r13.xyzw, r2.xyzw
dp4 r0.w, r13.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r11.xyzx, r0.xyzx
ge r0.w, r7.w, l(1.000000)
dp3 r1.w, -r0.xyzx, -r0.xyzx
rsq r1.w, r1.w
mul r2.xyz, -r0.xyzx, r1.wwww
movc r2.xyz, r0.wwww, -r7.xyzx, r2.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t17.xyzw, s4, cb0[138].x
mad r3.xyz, r3.xyzx, r8.wwww, r8.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r7.xyz, v2.yzxy, v3.zxyz
mad r7.xyz, v3.yzxy, v2.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v3.wwww
mul r7.xyz, r3.yyyy, r7.xyzx
mad r3.xyw, r3.xxxx, v2.xyxz, r7.xyxz
mad r3.xyz, r3.zzzz, v3.xyzx, r3.xywx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyzw, v0.xyxx, t18.xyzw, s5, cb0[138].x
mul_sat r7.xyzw, r7.xyzw, v1.xyzw
mad r0.w, r10.w, l(0.500000), r9.w
and r8.xyzw, l(4, 1024, 2048, 4096), cb3[0].xxxx
if_nz r8.x
  mad r11.xyz, r10.xyzx, l(-2097152.000000, -2097152.000000, -2097152.000000, 0.000000), r1.xyzx
  mad r11.xyz, r11.xyzx, cb0[226].xyzx, cb0[227].xyzx
  max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r11.xyz, r11.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r11.xyz, r11.xyzx, cb0[228].xyzx
  ftoi r13.xyz, r11.xyzx
  mov r13.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r13.xyzw, r13.xyzw, t2.xyzw
  utof r13.xyzw, r13.xyzw
  add r1.w, l(1.000000), cb0[228].w
  div r11.xyz, r11.xyzx, r13.wwww
  frc r11.xyz, r11.xyzx
  mul r11.xyz, r11.xyzx, cb0[228].wwww
  mad r11.xyz, r13.xyzx, r1.wwww, r11.xyzx
  add r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r11.xyz, r11.xyzx, cb0[229].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r11.x, r11.xyzx, t3.xyzw, s0, l(0.000000)
else 
  mov r11.x, l(1.000000)
endif 
mad r13.xyz, r7.xyzx, cb0[131].wwww, cb0[131].xyzx
mad r14.xyz, cb0[132].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb0[132].xyzx
ne r1.w, l(0.000000), cb0[178].w
mad r15.xyz, r14.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r13.xyzx
movc r13.xyz, r1.wwww, r15.xyzx, r13.xyzx
movc r14.xyz, r1.wwww, l(0,0,0,0), r14.xyzx
ilt r1.w, l(0), cb4[186].z
if_nz r1.w
  add r15.xyz, r9.xyzx, -r10.xyzx
  mad r15.xyz, r15.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
  mov r15.w, l(1.000000)
  dp4 r16.x, r15.xyzw, r4.xyzw
  dp4 r16.y, r15.xyzw, r5.xyzw
  dp4 r1.w, r15.xyzw, r6.xyzw
  div r11.zw, r16.xxxy, r1.wwww
  mad r15.xy, r11.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r1.w, r1.w, cb4[185].x, cb4[185].y
  log r1.w, r1.w
  mul r1.w, r1.w, cb4[185].z
  itof r2.w, cb4[186].z
  div r15.z, r1.w, r2.w
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r15.xyzx, t14.xyzw, s3, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t15.xyzw, s3, l(0.000000)
  dp3 r1.w, r16.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
  add r1.w, r1.w, l(0.000010)
  div r17.xyz, r16.xyzx, r1.wwww
  mul r18.yzw, r15.xxyz, r17.xxxx
  mul r19.yzw, r15.xxyz, r17.yyyy
  mul r15.yzw, r15.xxyz, r17.zzzz
  mul r17.yzw, r3.yyzx, l(0.000000, -1.023328, 1.023328, -1.023328)
  mov r18.x, r16.x
  mov r17.x, l(0.886228)
  dp4 r18.x, r18.xyzw, r17.xyzw
  mov r19.x, r16.y
  dp4 r18.y, r19.xyzw, r17.xyzw
  mov r15.x, r16.z
  dp4 r18.z, r15.xyzw, r17.xyzw
  max r15.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r15.xyz, r15.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
else 
  mov r15.xyz, l(0,0,0,0)
endif 
if_z v4.x
  mov r1.w, cb4[2].x
  mov r2.w, cb4[3].x
  mov r3.w, cb4[3].y
  mov r8.x, cb4[3].z
  mov r9.w, cb4[1].z
else 
  mov r1.w, cb4[43].x
  mov r2.w, cb4[44].x
  mov r3.w, cb4[44].y
  mov r8.x, cb4[44].z
  mov r9.w, cb4[42].z
endif 
add r11.zw, -r12.xxxy, v6.xxxy
mul r11.zw, r11.zzzw, cb0[126].zzzw
ftou r11.zw, r11.zzzw
ushr r11.zw, r11.zzzw, r1.wwww
if_z v4.x
  mov r12.xy, cb4[1].xyxx
else 
  mov r12.xy, cb4[42].xyxx
endif 
mad r1.w, v6.w, r2.w, r3.w
log r1.w, r1.w
mul r1.w, r8.x, r1.w
max r1.w, r1.w, l(0.000000)
ftou r1.w, r1.w
iadd r2.w, r9.w, l(-1)
umin r1.w, r1.w, r2.w
imad r1.w, r1.w, r12.y, r11.w
imad r1.w, r1.w, r12.x, r11.z
movc r8.xyz, r8.yzwy, l(1,1,1,0), l(0,0,0,0)
imad r2.w, r8.y, l(2), r8.x
imad r2.w, r8.z, l(4), r2.w
if_z v4.x
  mov r8.xyz, cb4[5].xyzx
  mov r12.xyz, cb4[4].xyzx
  mov r3.w, cb4[0].z
  mov r8.w, cb4[6].x
  mov r9.w, cb4[6].z
  mov r10.w, cb4[6].w
else 
  mov r8.xyz, cb4[46].xyzx
  mov r12.xyz, cb4[45].xyzx
  mov r3.w, cb4[41].z
  mov r8.w, cb4[47].x
  mov r9.w, cb4[47].z
  mov r10.w, cb4[47].w
endif 
if_nz r3.w
  and r16.xyz, r8.wwww, l(2, 4, 8, 0)
  movc r16.yzw, r16.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    ge r17.xyzw, v6.wwww, cb4[8].xyzw
    and r17.xyzw, r17.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    add r3.w, r17.y, r17.x
    add r3.w, r17.z, r3.w
    add r3.w, r17.w, r3.w
    ftou r3.w, r3.w
    ult r11.z, r3.w, cb4[7].x
    if_nz r11.z
      ishl r11.z, r3.w, l(2)
      mul r17.xyzw, r0.yyyy, cb4[r11.z + 10].xyzw
      mad r17.xyzw, r0.xxxx, cb4[r11.z + 9].xyzw, r17.xyzw
      mad r17.xyzw, r0.zzzz, cb4[r11.z + 11].xyzw, r17.xyzw
      add r17.xyzw, r17.xyzw, cb4[r11.z + 12].xyzw
      div r11.zw, r17.xxxy, r17.wwww
      ge r17.xy, r11.zwzz, cb4[r3.w + 25].xyxx
      ge r18.xy, cb4[r3.w + 25].zwzz, r11.zwzz
      and r17.xy, r17.xyxx, r18.xyxx
      and r3.w, r17.y, r17.x
      if_nz r3.w
        mad r11.zw, r11.zzzw, cb4[29].xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
        frc r17.xy, r11.zwzz
        round_ni r11.zw, r11.zzzw
        add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
        mul r11.zw, r11.zzzw, cb4[29].zzzw
        gather4_indexable(texture2d)(float,float,float,float) r18.xyzw, r11.zwzz, t4.xyzw, s1.x
        add r3.w, -r17.z, l(1.000000)
        mad r3.w, r3.w, l(4000.000000), l(-1.000000)
        mad_sat r18.xyzw, r18.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), -r3.wwww
        add r11.zw, -r18.wwwx, r18.zzzy
        mad r11.zw, r17.xxxx, r11.zzzw, r18.wwwx
        add r3.w, -r11.z, r11.w
        mad r3.w, r17.y, r3.w, r11.z
      else 
        mov r3.w, l(1.000000)
      endif 
    else 
      mov r3.w, l(1.000000)
    endif 
  else 
    mov r3.w, l(1.000000)
  endif 
  ine r11.z, l(-1), cb4[7].y
  if_nz r11.z
    add r17.xyz, r0.xyzx, -cb0[72].xyzx
    imad r18.xyzw, cb4[7].yyyy, l(336, 336, 336, 336), l(128, 144, 160, 176)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r19.xyzw, r18.x, t0.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r20.xyzw, r18.y, t0.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r21.xyzw, r18.z, t0.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r18.xyzw, r18.w, t0.xyzw
    imad r22.xyz, cb4[7].yyyy, l(336, 336, 336, 0), l(256, 272, 288, 0)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.xyzw, r22.x, t0.xyzw
    if_z r23.w
      add r24.xyz, r23.xyzx, cb0[60].xyzx
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xzw, r22.z, t0.xxyz
      add r22.xzw, r17.xxyz, r22.xxzw
      mad r22.xzw, r24.xxyz, l(2097152.000000, 0.000000, 2097152.000000, 2097152.000000), r22.xxzw
      dp3 r11.z, r22.xzwx, r22.xzwx
      sqrt r11.z, r11.z
      log r11.z, r11.z
      imad r22.xz, cb4[7].yyyy, l(336, 0, 336, 0), l(300, 0, 316, 0)
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r11.w, r22.x, t0.xxxx
      add r11.z, r11.w, r11.z
      round_ni r11.z, r11.z
      ftoi r11.z, r11.z
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xz, r22.z, t0.xxyx
      iadd r11.z, r11.z, -r22.x
      imax r11.z, r11.z, l(0)
      ilt r11.w, r11.z, r22.z
      if_nz r11.w
        iadd r11.z, r11.z, cb4[7].y
        imad r24.xyzw, r11.zzzz, l(336, 336, 336, 336), l(128, 144, 160, 176)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xzw, r24.x, t0.xxyz
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.xyz, r24.y, t0.xyzx
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xyz, r24.z, t0.xyzx
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r26.xyz, r24.w, t0.xyzx
        imad r27.xy, r11.zzzz, l(336, 336, 0, 0), l(256, 272, 0, 0)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r27.xzw, r27.x, t0.xxyz
        add r27.xzw, r27.xxzw, cb0[60].xxyz
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r28.xyz, r27.y, t0.xyzx
        add r28.xyz, r17.xyzx, r28.xyzx
        mad r27.xyz, r27.xzwx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r28.xyzx
        mul r25.xyz, r25.xyzx, r27.yyyy
        mad r22.xzw, r27.xxxx, r22.xxzw, r25.xxyz
        mad r22.xzw, r27.zzzz, r24.xxyz, r22.xxzw
        add r22.xzw, r26.xxyz, r22.xxzw
        mul r24.xy, r22.xzxx, l(128.000000, 128.000000, 0.000000, 0.000000)
        ftou r24.xy, r24.xyxx
        ishl r11.w, r24.y, l(7)
        iadd r11.w, r11.w, r24.x
        imad r11.w, r11.z, l(0x00005555), r11.w
        ishl r11.w, r11.w, l(2)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r11.w, r11.w, t1.xxxx
        and r12.w, r11.w, l(0x08000000)
        if_nz r12.w
          ubfe r12.w, l(6), l(20), r11.w
          if_nz r12.w
            ushr r13.w, r11.w, l(20)
            imad r24.zw, r11.zzzz, l(0, 0, 336, 336), l(0, 0, 304, 112)
            iadd r11.z, r11.z, r12.w
            imad r25.xy, r11.zzzz, l(336, 336, 0, 0), l(304, 112, 0, 0)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r26.x, r24.z, t0.xxxx
            imad r12.w, l(1), l(4), r24.z
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r26.y, r12.w, t0.xxxx
            imad r24.xy, l(-32, -32, 0, 0), r26.xyxx, r24.xyxx
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.xz, r25.x, t0.xxyx
            ishl r26.zw, r25.xxxz, l(0, 0, 5, 5)
            ishl r26.zw, r26.zzzw, r13.wwww
            iadd r24.xy, r24.xyxx, r26.zwzz
            ushr r24.xy, r24.xyxx, r13.wwww
            ishl r26.zw, r24.xxxy, l(0, 0, 7, 7)
            ishl r12.w, l(1), r13.w
            utof r12.w, r12.w
            div r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r12.w
            iadd r13.w, r24.x, r26.w
            imad r11.z, r11.z, l(0x00005555), r13.w
            iadd r13.w, r25.y, l(8)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r13.w, r13.w, t0.xxxx
            iadd r14.w, r24.w, l(8)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r14.w, r14.w, t0.xxxx
            mad r13.w, -r12.w, r14.w, r13.w
            itof r24.zw, r25.xxxz
            itof r25.xy, r26.xyxx
            mad r24.zw, -r25.xxxy, r12.wwww, r24.zzzw
            mul r24.zw, r24.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
            mad r24.zw, r22.xxxz, r12.wwww, r24.zzzw
            mul r24.zw, r24.zzzw, l(0.000000, 0.000000, 16384.000000, 16384.000000)
            ftou r24.zw, r24.zzzw
            bfi r24.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r24.xyxx, l(127, 127, 0, 0)
            umax r24.zw, r26.zzzw, r24.zzzw
            umin r24.xy, r24.xyxx, r24.zwzz
            ishl r11.z, r11.z, l(2)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r11.z, r11.z, t1.xxxx
            and r25.xz, r11.zzzz, l(1023, 0, 0x08000000, 0)
            ine r14.w, r25.z, l(0)
            ubfe r25.yw, l(0, 10, 0, 6), l(0, 10, 0, 20), r11.zzzz
            ieq r11.z, r25.w, l(0)
            and r24.z, r11.z, r14.w
          else 
            mul r22.xz, r22.xxzx, l(16384.000000, 0.000000, 16384.000000, 0.000000)
            ftou r24.xy, r22.xzxx
            and r25.x, r11.w, l(1023)
            ubfe r25.y, l(10), l(10), r11.w
            mov r12.w, l(1.000000)
            mov r13.w, l(0)
            mov r24.z, l(-1)
          endif 
          if_nz r24.z
            bfi r25.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r25.xyxx, r24.xyxx
            mov r25.zw, l(0,0,0,0)
            ld_indexable(texture2d)(uint,uint,uint,uint) r11.z, r25.xyzw, t16.yzxw
            add r11.z, -r13.w, r11.z
            div r11.z, r11.z, r12.w
          else 
            mov r11.z, l(0)
          endif 
        else 
          mov r11.z, l(0)
          mov r24.z, l(0)
        endif 
        lt r11.z, r22.w, r11.z
        movc r11.z, r11.z, l(0), l(1.000000)
        and r11.z, r11.z, r24.z
      else 
        mov r11.z, l(0)
        mov r24.z, l(0)
      endif 
    else 
      add r22.xzw, r23.xxyz, cb0[60].xxyz
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.xyz, r22.y, t0.xyzx
      add r17.xyz, r17.xyzx, r23.xyzx
      mad r17.xyz, r22.xzwx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r17.xyzx
      ine r11.w, r23.w, l(2)
      if_nz r11.w
        ge r22.xy, |r17.xxxx|, |r17.yzyy|
        and r11.w, r22.y, r22.x
        lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r17.xyzx
        lt r12.w, |r17.z|, |r17.y|
        movc r22.xyz, r22.xyzx, l(0,2,4,0), l(1,3,5,0)
        movc r12.w, r12.w, r22.y, r22.z
        movc r11.w, r11.w, r22.x, r12.w
        iadd r11.w, r11.w, cb4[7].y
        imad r22.xyzw, r11.wwww, l(336, 336, 336, 336), l(128, 144, 160, 176)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.xyzw, r22.x, t0.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.xyzw, r22.y, t0.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r26.xyzw, r22.z, t0.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r18.xyzw, r22.w, t0.xyzw
        mov r22.x, r23.x
        mov r22.y, r25.x
        mov r22.z, r26.x
        mov r22.w, r18.x
        mov r27.x, r23.y
        mov r27.y, r25.y
        mov r27.z, r26.y
        mov r27.w, r18.y
        mov r28.x, r23.z
        mov r28.y, r25.z
        mov r28.z, r26.z
        mov r28.w, r18.z
        mov r18.x, r23.w
        mov r18.y, r25.w
        mov r18.z, r26.w
      else 
        mov r22.x, r19.x
        mov r22.y, r20.x
        mov r22.z, r21.x
        mov r22.w, r18.x
        mov r27.x, r19.y
        mov r27.y, r20.y
        mov r27.z, r21.y
        mov r27.w, r18.y
        mov r28.x, r19.z
        mov r28.y, r20.z
        mov r28.z, r21.z
        mov r28.w, r18.z
        mov r18.x, r19.w
        mov r18.y, r20.w
        mov r18.z, r21.w
        mov r11.w, cb4[7].y
      endif 
      mov r17.w, l(1.000000)
      dp4 r19.x, r17.xyzw, r22.xyzw
      dp4 r19.y, r17.xyzw, r27.xyzw
      dp4 r19.z, r17.xyzw, r28.xyzw
      dp4 r12.w, r17.xyzw, r18.xyzw
      div r17.xyz, r19.xyzx, r12.wwww
      mul r18.xy, r17.xyxx, l(128.000000, 128.000000, 0.000000, 0.000000)
      ftou r18.xy, r18.xyxx
      ishl r12.w, r18.y, l(7)
      iadd r12.w, r12.w, r18.x
      imad r11.w, r11.w, l(0x00005555), r12.w
      ishl r11.w, r11.w, l(2)
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r11.w, r11.w, t1.xxxx
      and r12.w, r11.w, l(0x08000000)
      if_nz r12.w
        and r18.x, r11.w, l(1023)
        ubfe r18.y, l(10), l(10), r11.w
        ushr r11.w, r11.w, l(20)
        ushr r11.w, l(0x00004000), r11.w
        utof r11.w, r11.w
        mul r17.xy, r11.wwww, r17.xyxx
        ftou r17.xy, r17.xyxx
        bfi r18.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r18.xyxx, r17.xyxx
        mov r18.zw, l(0,0,0,0)
        ld_indexable(texture2d)(uint,uint,uint,uint) r17.x, r18.xyzw, t16.xyzw
      else 
        mov r17.x, l(0)
      endif 
      mov r17.y, l(-1)
      movc r24.zw, r12.wwww, r17.yyyx, l(0,0,0,0)
      lt r11.w, r17.z, r24.w
      movc r11.w, r11.w, l(0), l(1.000000)
      movc r11.z, r12.w, r11.w, l(0)
    endif 
    movc r11.z, r24.z, r11.z, l(1.000000)
    mul r3.w, r3.w, r11.z
  endif 
  mad_sat r9.w, v6.w, r9.w, r10.w
  mov r16.x, l(1.000000)
  dp4 r10.w, r16.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r11.z, r10.w, l(-1.000000)
  mad r10.w, r10.w, r11.z, l(1.000000)
  mul r9.w, r9.w, r9.w
  add r10.w, -r3.w, r10.w
  mad r3.w, r9.w, r10.w, r3.w
  min r9.w, r3.w, l(1.000000)
  add r9.w, r3.w, r9.w
  lt r9.w, l(0.000000), r9.w
  if_nz r9.w
    mul r16.xyz, r13.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
    dp3 r9.w, r12.xyzx, r12.xyzx
    rsq r9.w, r9.w
    mul r12.xyz, r9.wwww, r12.xyzx
    dp3_sat r9.w, r3.xyzx, r12.xyzx
    mul r12.xyz, r9.wwww, r16.xyzx
    mul r8.xyz, r3.wwww, r8.xyzx
    mul r8.xyz, r8.xyzx, r12.xyzx
  else 
    mov r8.xyz, l(0,0,0,0)
  endif 
  ushr r3.w, r8.w, l(8)
  and r3.w, r2.w, r3.w
  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)
  mov r11.x, l(1.000000)
else 
  mov r8.xyz, l(0,0,0,0)
endif 
if_z v4.x
  ishl r3.w, r1.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r3.w, r3.wwww, t6.yzwx
  umin r3.w, r3.w, cb4[0].x
  bfi r8.w, l(31), l(1), r1.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r8.wwww, t6.yzwx
else 
  ishl r9.w, r1.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t9.yzwx
  umin r3.w, r9.w, cb4[41].x
  bfi r1.w, l(31), l(1), r1.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r1.wwww, t9.yzwx
endif 
movc r1.w, v4.x, cb4[41].x, cb4[0].x
umin r1.w, r1.w, r3.w
mul r12.xyz, r13.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
mov r11.y, l(1.000000)
mov r16.xyz, r8.xyzx
mov r3.w, l(0)
loop 
  uge r9.w, r3.w, r1.w
  breakc_nz r9.w
  iadd r9.w, r3.w, r8.w
  if_z v4.x
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r9.wwww, t7.yzwx
    imul null, r11.z, r10.w, l(6)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r11.zzzz, t5.xyzw
    imad r11.z, r10.w, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r11.zzzz, t5.xyzw
    imad r19.xyz, r10.wwww, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.yyyy, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r19.zzzz, t5.xyzw
  else 
    ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t10.yzwx
    imul null, r10.w, r9.w, l(6)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r10.wwww, t8.xyzw
    imad r10.w, r9.w, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r10.wwww, t8.xyzw
    imad r22.xyz, r9.wwww, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r22.xxxx, t8.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r22.yyyy, t8.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r22.zzzz, t8.xyzw
  endif 
  eq r9.w, r18.w, l(0.000000)
  add r17.xyz, -r0.xyzx, r17.xyzx
  dp3 r10.w, r17.xyzx, r17.xyzx
  mul r11.z, r17.w, r17.w
  mul r11.z, r10.w, r11.z
  mad r11.z, -r11.z, r11.z, l(1.000000)
  max r11.z, r11.z, l(0.000000)
  mul r11.z, r11.z, r11.z
  mul r22.xyz, r17.wwww, r17.xyzx
  dp3 r11.w, r22.xyzx, r22.xyzx
  min r11.w, r11.w, l(1.000000)
  add r11.w, -r11.w, l(1.000000)
  log r11.w, r11.w
  mul r11.w, r11.w, r18.w
  exp r11.w, r11.w
  movc r11.z, r9.w, r11.z, r11.w
  lt r11.w, l(-2.000000), r20.x
  rsq r10.w, r10.w
  mul r22.xyz, r10.wwww, r17.xyzx
  dp3 r10.w, r22.xyzx, r21.xyzx
  add r10.w, -r20.x, r10.w
  mul_sat r10.w, r20.y, r10.w
  mul r10.w, r10.w, r10.w
  mul r10.w, r10.w, r11.z
  movc r10.w, r11.w, r10.w, r11.z
  lt r11.z, l(0.000000), r10.w
  if_nz r11.z
    and r11.z, r21.w, l(255)
    movc r11.z, r11.z, l(1), l(0)
    if_nz r11.z
      and r22.xyzw, r21.wwww, l(1, 2, 4, 8)
      movc r22.xyzw, r22.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r11.z, r21.w, l(4)
      ubfe r11.w, l(1), l(4), r21.w
      movc r23.x, r11.w, l(1.000000), l(0)
      and r21.xyz, r11.zzzz, l(2, 4, 8, 0)
      movc r23.yzw, r21.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r11.z, r23.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r11.w, r11.xyyy, r22.xyzw
      dp4 r12.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r11.w, r11.w, l(-1.000000)
      mad r11.w, r12.w, r11.w, l(1.000000)
      mul r11.z, r11.w, r11.z
    else 
      mov r11.z, l(1.000000)
    endif 
    lt r11.w, l(0.000000), r11.z
    if_nz r11.w
      and r11.w, r20.w, l(0x0000ffff)
      f16tof32 r11.w, r11.w
      mul r12.w, r11.w, l(0.500000)
      mad r20.xyw, -r19.xyxz, r12.wwww, r17.xyxz
      mad r17.xyz, r19.xyzx, r12.wwww, r17.xyzx
      lt r11.w, l(0.000000), r11.w
      if_nz r11.w
        dp3 r11.w, r20.xywx, r20.xywx
        rsq r11.w, r11.w
        dp3 r12.w, r17.xyzx, r17.xyzx
        rsq r12.w, r12.w
        mul r13.w, r11.w, r12.w
        dp3 r14.w, r3.xyzx, r20.xywx
        dp3 r15.w, r3.xyzx, r17.xyzx
        mul r12.w, r12.w, r15.w
        mad r11.w, r14.w, r11.w, r12.w
        mul r11.w, r11.w, l(0.500000)
        dp3 r12.w, r20.xywx, r17.xyzx
        mul r12.w, r13.w, r12.w
        mad r12.w, r12.w, l(0.500000), r13.w
        add r12.w, r12.w, l(0.500000)
        div r12.w, r13.w, r12.w
      else 
        dp3 r13.w, r20.xywx, r20.xywx
        rsq r14.w, r13.w
        mul r17.xyz, r14.wwww, r20.xywx
        dp3 r11.w, r3.xyzx, r17.xyzx
        add r13.w, r13.w, l(1.000000)
        div r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
      endif 
      lt r13.w, l(0.000000), r20.z
      mul r14.w, r20.z, r20.z
      mul_sat r14.w, r12.w, r14.w
      sqrt r14.w, r14.w
      lt r15.w, r11.w, r14.w
      max r16.w, r11.w, -r14.w
      add r16.w, r14.w, r16.w
      mul r16.w, r16.w, r16.w
      mul r14.w, r14.w, l(4.000000)
      div r14.w, r16.w, r14.w
      movc r14.w, r15.w, r14.w, r11.w
      movc_sat r11.w, r13.w, r14.w, r11.w
      movc r9.w, r9.w, r12.w, l(1.000000)
      mul r9.w, r11.w, r9.w
      mul r17.xyz, r9.wwww, r12.xyzx
      mul r18.xyz, r10.wwww, r18.xyzx
      mul r18.xyz, r11.zzzz, r18.xyzx
      mul r17.xyz, r17.xyzx, r18.xyzx
    else 
      mov r17.xyz, l(0,0,0,0)
    endif 
  else 
    mov r17.xyz, l(0,0,0,0)
  endif 
  ushr r9.w, r21.w, l(8)
  and r9.w, r2.w, r9.w
  add r17.xyz, r16.xyzx, r17.xyzx
  movc r16.xyz, r9.wwww, r17.xyzx, r16.xyzx
  iadd r3.w, r3.w, l(1)
endloop 
mad r8.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r8.x, r8.x
dp3 r0.y, r3.xyzx, r2.xyzx
mov_sat r0.z, r0.y
mul r0.z, r0.z, l(-9.280000)
exp r0.z, r0.z
min r0.x, r0.z, r0.x
mad r0.x, r0.x, r8.x, r8.y
mad r0.xz, r0.xxxx, l(-1.040000, 0.000000, 1.040000, 0.000000), r8.zzwz
lt r1.w, l(0.000000), cb4[116].w
if_nz r1.w
  add r8.xyz, r9.xyzx, -r10.xyzx
  mad r8.xyz, r8.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
  mov r8.w, l(1.000000)
  dp4 r4.x, r8.xyzw, r4.xyzw
  dp4 r4.y, r8.xyzw, r5.xyzw
  dp4 r1.w, r8.xyzw, r6.xyzw
  div r4.xy, r4.xyxx, r1.wwww
  mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r1.w, r1.w, cb0[224].x, cb0[224].y
  log r1.w, r1.w
  mul r1.w, r1.w, cb0[224].z
  mul r4.z, r1.w, cb0[223].z
  if_z v4.x
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t12.xyzw, s0, l(0.000000)
  else 
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t13.xyzw, s0, l(0.000000)
  endif 
  mul r4.x, r5.w, v5.w
  mad r4.yzw, v5.xxyz, r5.wwww, r5.xxyz
else 
  mov r4.xyzw, v5.wxyz
endif 
mul r5.xyz, cb5[1].yzwy, cb5[1].xxxx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb0[135].x
if_nz r1.w
  add r6.xyz, -r10.xyzx, -cb3[1].xyzx
  add r8.xyz, r1.xyzx, -cb3[19].xyzx
  mad r6.xyz, r6.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r8.xyzx
  add r8.x, l(1.000000), cb3[18].w
  add r8.y, l(1.000000), cb3[25].w
  add r8.z, l(1.000000), cb3[26].w
  lt r6.xyz, r8.xyzx, |r6.xyzx|
  or r1.w, r6.y, r6.x
  or r1.w, r6.z, r1.w
  add r2.w, -r10.y, -r10.x
  add r2.w, -r10.z, r2.w
  mul r2.w, r2.w, l(2420.113525)
  frc r2.w, r2.w
  add r1.x, r1.y, r1.x
  add r1.x, r1.z, r1.x
  mad r1.x, r1.x, l(0.001154), r2.w
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r5.xyz, r1.wwww, r1.xyzx, r5.xyzx
  movc o0.w, r1.w, l(1.000000), r7.w
else 
  mov o0.w, r7.w
endif 
movc r1.xyz, cb4[36].xxxx, r16.xyzx, l(0,0,0,0)
add r0.y, r0.y, r0.y
mad r2.xyz, r3.xyzx, r0.yyyy, -r2.xyzx
add r0.y, l(-1.000000), cb0[190].z
max r1.w, r0.w, l(0.001000)
log r1.w, r1.w
mad r1.w, -r1.w, l(1.200000), l(1.000000)
add r0.y, r0.y, -r1.w
mov r1.w, cb3[0].w
mov r2.w, cb2[r1.w + 682].y
sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r2.xyzw, t11.xyzw, s2, r0.y
mul r2.xyz, r2.xyzx, cb2[r1.w + 682].xxxx
mul r2.xyz, r2.xyzx, cb0[155].xyzx
min r0.y, l(0.000000), cb0[192].z
mad_sat r0.w, r0.w, cb0[192].x, cb0[192].y
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
add r0.y, r0.y, l(-1.000000)
mad r0.y, r0.w, r0.y, l(1.000000)
mul r2.xyz, r0.yyyy, r2.xyzx
mul r0.y, r14.y, l(50.000000)
mov_sat r0.y, r0.y
mul r0.y, r0.z, r0.y
mad r0.xyz, r14.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r2.xyzx
mad r2.xyz, r14.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r14.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r14.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mad r1.xyz, r14.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r13.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, cb0[140].xxxx, r1.xyzx, r0.xyzx
mul r1.xyz, r13.xyzx, r15.xyzx
mad r2.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
add r0.xyz, r5.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r4.xxxx, r4.yzwy
mul o0.xyz, r0.xyzx, cb0[130].yyyy
ret 
// Approximately 771 instruction slots used
