//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   uint NumCutoutVerticesPerFrame;    // Offset:    0 Size:     4
//
// }
//
// cbuffer TranslucentBasePass
// {
//
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_ExponentialFogParameters;// Offset: 1744 Size:    16
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_ExponentialFogParameters2;// Offset: 1760 Size:    16
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_ExponentialFogColorParameter;// Offset: 1776 Size:    16
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_ExponentialFogParameters3;// Offset: 1792 Size:    16
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_InscatteringLightDirection;// Offset: 1808 Size:    16
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Fog_DirectionalInscatteringColor;// Offset: 1824 Size:    16
//   float2 TranslucentBasePass_TranslucentBasePass_Shared_Fog_SinCosInscatteringColorCubemapRotation;// Offset: 1840 Size:     8
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Fog_FogInscatteringTextureParameters;// Offset: 1856 Size:    12
//
// }
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_ViewForward;      // Offset:  992 Size:    12
//   float3 View_View_ViewUp;           // Offset: 1008 Size:    12
//   float3 View_View_ViewRight;        // Offset: 1024 Size:    12
//   float3 View_View_HMDViewNoRollUp;  // Offset: 1040 Size:    12
//   float3 View_View_HMDViewNoRollRight;// Offset: 1056 Size:    12
//   float3 View_View_RelativeWorldCameraOrigin;// Offset: 1104 Size:    12
//   float3 View_View_TranslatedWorldCameraOrigin;// Offset: 1120 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float View_View_OneOverPreExposure;// Offset: 2088 Size:     4
//   float4 View_View_TranslucencyLightingVolumeInvSize[2];// Offset: 2320 Size:    32
//   float4 View_View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;// Offset: 2800 Size:    16
//   float View_View_SkyAtmosphereAerialPerspectiveStartDepthKm;// Offset: 2816 Size:     4
//   float View_View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;// Offset: 2820 Size:     4
//   float View_View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;// Offset: 2824 Size:     4
//   float View_View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;// Offset: 2832 Size:     4
//   float View_View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;// Offset: 2836 Size:     4
//   float View_View_RealTimeReflectionCapture;// Offset: 2864 Size:     4
//   float View_View_HMDEyePaddingOffset;// Offset: 3044 Size:     4
//   float View_View_VolumetricFogMaxDistance;// Offset: 3608 Size:     4
//
// }
//
// cbuffer InstancedView
// {
//
//   row_major float4x4 InstancedView_InstancedView_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 InstancedView_InstancedView_ViewTilePosition;// Offset:  960 Size:    12
//   float3 InstancedView_InstancedView_ViewUp;// Offset: 1008 Size:    12
//   float3 InstancedView_InstancedView_ViewRight;// Offset: 1024 Size:    12
//   float3 InstancedView_InstancedView_HMDViewNoRollUp;// Offset: 1040 Size:    12
//   float3 InstancedView_InstancedView_HMDViewNoRollRight;// Offset: 1056 Size:    12
//   float3 InstancedView_InstancedView_RelativeWorldCameraOrigin;// Offset: 1104 Size:    12
//   float3 InstancedView_InstancedView_TranslatedWorldCameraOrigin;// Offset: 1120 Size:    12
//   float3 InstancedView_InstancedView_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float InstancedView_InstancedView_OneOverPreExposure;// Offset: 2088 Size:     4
//   float4 InstancedView_InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;// Offset: 2800 Size:    16
//   float InstancedView_InstancedView_SkyAtmosphereAerialPerspectiveStartDepthKm;// Offset: 2816 Size:     4
//   float InstancedView_InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;// Offset: 2820 Size:     4
//   float InstancedView_InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;// Offset: 2824 Size:     4
//   float InstancedView_InstancedView_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;// Offset: 2832 Size:     4
//   float InstancedView_InstancedView_SkyAtmosphereApplyCameraAerialPerspectiveVolume;// Offset: 2836 Size:     4
//   float InstancedView_InstancedView_RealTimeReflectionCapture;// Offset: 2864 Size:     4
//   float InstancedView_InstancedView_HMDEyePaddingOffset;// Offset: 3044 Size:     4
//   int InstancedView_InstancedView_StereoPassIndex;// Offset: 3084 Size:     4
//
// }
//
// cbuffer Primitive
// {
//
//   float3 Primitive_Primitive_TilePosition;// Offset:   16 Size:    12
//   row_major float4x4 Primitive_Primitive_LocalToRelativeWorld;// Offset:   32 Size:    64
//
// }
//
// cbuffer SpriteVF
// {
//
//   float4 SpriteVF_SpriteVF_AxisLockRight;// Offset:    0 Size:    16
//   float4 SpriteVF_SpriteVF_AxisLockUp;// Offset:   16 Size:    16
//   float4 SpriteVF_SpriteVF_TangentSelector;// Offset:   32 Size:    16
//   float4 SpriteVF_SpriteVF_NormalsSphereCenter;// Offset:   48 Size:    16
//   float4 SpriteVF_SpriteVF_NormalsCylinderUnitDirection;// Offset:   64 Size:    16
//   float4 SpriteVF_SpriteVF_SubImageSize;// Offset:   80 Size:    16
//   float3 SpriteVF_SpriteVF_CameraFacingBlend;// Offset:   96 Size:    12
//   float SpriteVF_SpriteVF_RemoveHMDRoll;// Offset:  108 Size:     4
//   float SpriteVF_SpriteVF_RotationScale;// Offset:  128 Size:     4
//   float SpriteVF_SpriteVF_RotationBias;// Offset:  132 Size:     4
//   float SpriteVF_SpriteVF_NormalsType;// Offset:  136 Size:     4
//   float2 SpriteVF_SpriteVF_PivotOffset;// Offset:  144 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TranslucentBasePass_Shared_Fog_FogInscatteringColorSampler    sampler      NA          NA             s0      1 
// View_CameraAerialPerspectiveVolumeSampler    sampler      NA          NA             s1      1 
// TranslucentBasePass_Shared_Fog_FogInscatteringColorCubemap    texture  float4        cube             t0      1 
// View_CameraAerialPerspectiveVolume    texture  float4          3d             t1      1 
// CutoutGeometry                    texture  float4         buf             t2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// TranslucentBasePass               cbuffer      NA          NA            cb1      1 
// View                              cbuffer      NA          NA            cb2      1 
// InstancedView                     cbuffer      NA          NA            cb3      1 
// Primitive                         cbuffer      NA          NA            cb4      1 
// SpriteVF                          cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyzw        1     NONE   float   xyzw
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE   float   xyzw
// ATTRIBUTE                4   xy          4     NONE   float   xy  
// SV_VertexID              0   x           5   VERTID    uint   x   
// SV_InstanceID            0   x           6   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// PARTICLE_LIGHTING_OFFSET     0   xyz         4     NONE   float   xyz 
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_ClipDistance          0   x           8  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[117], immediateIndexed
dcl_constantbuffer CB2[226], immediateIndexed
dcl_constantbuffer CB3[193], immediateIndexed
dcl_constantbuffer CB4[6], immediateIndexed
dcl_constantbuffer CB5[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_input_sgv v5.x, vertex_id
dcl_input_sgv v6.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.x
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_output_siv o8.x, clip_distance
dcl_temps 21
ilt [precise(x)] r0.x, l(0), cb3[192].w
and [precise(y)] r0.y, r0.x, v6.x
and [precise(y)] r0.y, r0.y, l(1)
if_z r0.y
  mov [precise(x)] r1.x, cb2[0].x
  mov [precise(y)] r1.y, cb2[1].x
  mov [precise(z)] r1.z, cb2[2].x
  mov [precise(w)] r1.w, cb2[3].x
  mov [precise(x)] r2.x, cb2[0].y
  mov [precise(y)] r2.y, cb2[1].y
  mov [precise(z)] r2.z, cb2[2].y
  mov [precise(w)] r2.w, cb2[3].y
  mov [precise(x)] r3.x, cb2[0].z
  mov [precise(y)] r3.y, cb2[1].z
  mov [precise(z)] r3.z, cb2[2].z
  mov [precise(w)] r3.w, cb2[3].z
  mov [precise(x)] r4.x, cb2[0].w
  mov [precise(y)] r4.y, cb2[1].w
  mov [precise(z)] r4.z, cb2[2].w
  mov [precise(w)] r4.w, cb2[3].w
  mov [precise(xyz)] r5.xyz, cb2[63].xyzx
  mov [precise(xyz)] r6.xyz, cb2[64].xyzx
  mov [precise(xyz)] r7.xyz, cb2[65].xyzx
  mov [precise(xyz)] r8.xyz, cb2[66].xyzx
  mov [precise(xyz)] r9.xyz, cb2[70].xyzx
  mov r0.zw, cb2[176].yyyz
  mov r5.w, cb2[177].x
  mov [precise(xyz)] r10.xyz, cb2[60].xyzx
  mov [precise(xyz)] r11.xyz, cb2[69].xyzx
  mov [precise(xyz)] r12.xyz, -cb2[60].xyzx
  mov [precise(xyz)] r13.xyz, cb2[72].xyzx
  mov r14.xyzw, cb2[175].xyzw
  mov r6.w, cb2[130].z
  mov r7.w, cb2[176].x
  mov [precise(w)] r8.w, cb2[177].y
  mov r9.w, cb2[179].x
  mov [precise(w)] r10.w, cb2[190].y
else 
  mov [precise(x)] r1.x, cb3[0].x
  mov [precise(y)] r1.y, cb3[1].x
  mov [precise(z)] r1.z, cb3[2].x
  mov [precise(w)] r1.w, cb3[3].x
  mov [precise(x)] r2.x, cb3[0].y
  mov [precise(y)] r2.y, cb3[1].y
  mov [precise(z)] r2.z, cb3[2].y
  mov [precise(w)] r2.w, cb3[3].y
  mov [precise(x)] r3.x, cb3[0].z
  mov [precise(y)] r3.y, cb3[1].z
  mov [precise(z)] r3.z, cb3[2].z
  mov [precise(w)] r3.w, cb3[3].z
  mov [precise(x)] r4.x, cb3[0].w
  mov [precise(y)] r4.y, cb3[1].w
  mov [precise(z)] r4.z, cb3[2].w
  mov [precise(w)] r4.w, cb3[3].w
  mov [precise(xyz)] r5.xyz, cb3[63].xyzx
  mov [precise(xyz)] r6.xyz, cb3[64].xyzx
  mov [precise(xyz)] r7.xyz, cb3[65].xyzx
  mov [precise(xyz)] r8.xyz, cb3[66].xyzx
  mov [precise(xyz)] r9.xyz, cb3[70].xyzx
  mov r0.zw, cb3[176].yyyz
  mov r5.w, cb3[177].x
  mov [precise(xyz)] r10.xyz, cb3[60].xyzx
  mov [precise(xyz)] r11.xyz, cb3[69].xyzx
  mov [precise(xyz)] r12.xyz, -cb3[60].xyzx
  mov [precise(xyz)] r13.xyz, cb3[72].xyzx
  mov r14.xyzw, cb3[175].xyzw
  mov r6.w, cb3[130].z
  mov r7.w, cb3[176].x
  mov [precise(w)] r8.w, cb3[177].y
  mov r9.w, cb3[179].x
  mov [precise(w)] r10.w, cb3[190].y
endif 
mul [precise(xyz)] r15.xyz, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), cb4[1].xyzx
mul [precise(xyz)] r16.xyz, v0.xxxx, cb4[2].xyzx
mul [precise(xyz)] r17.xyz, v0.yyyy, cb4[3].xyzx
add [precise(xyz)] r16.xyz, r16.xyzx, r17.xyzx
mul [precise(xyz)] r17.xyz, v0.zzzz, cb4[4].xyzx
add [precise(xyz)] r16.xyz, r16.xyzx, r17.xyzx
add [precise(xyz)] r16.xyz, r16.xyzx, cb4[5].xyzx
add [precise(xyz)] r16.xyz, r15.xyzx, r16.xyzx
add [precise(xyz)] r8.xyz, -r6.xyzx, r8.xyzx
mul [precise(xyz)] r8.xyz, r8.xyzx, cb5[6].wwww
add [precise(xyz)] r6.xyz, r6.xyzx, r8.xyzx
add [precise(xyz)] r8.xyz, -r6.xyzx, cb5[0].xyzx
mul [precise(xyz)] r8.xyz, r8.xyzx, cb5[0].wwww
add [precise(xyz)] r6.xyz, r6.xyzx, r8.xyzx
add [precise(xyz)] r7.xyz, -r5.xyzx, r7.xyzx
mul [precise(xyz)] r7.xyz, r7.xyzx, cb5[6].wwww
add [precise(xyz)] r5.xyz, r5.xyzx, r7.xyzx
add [precise(xyz)] r7.xyz, r5.xyzx, cb5[1].xyzx
mul [precise(xyz)] r7.xyz, r7.xyzx, cb5[1].wwww
add [precise(xyz)] r5.xyz, -r5.xyzx, r7.xyzx
mul [precise(xyz)] r7.xyz, r10.zxyz, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r7.xyz, r11.zxyz, r7.xyzx
add [precise(xyz)] r7.xyz, -r16.zxyz, r7.xyzx
dp3 [precise(x)] r8.x, r7.yzxy, r7.yzxy
max [precise(y)] r8.y, r8.x, l(0.000000)
rsq [precise(y)] r8.y, r8.y
mul [precise(xyz)] r7.xyz, r7.xyzx, r8.yyyy
lt [precise(y)] r8.y, l(0.000000), cb5[6].x
if_nz r8.y
  mul [precise(xyz)] r10.xyz, r7.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
  mul [precise(xyz)] r11.xyz, r7.yzxy, l(1.000000, 0.000000, 0.000000, 0.000000)
  add [precise(xyz)] r10.xyz, r10.xyzx, -r11.xyzx
  dp3 [precise(y)] r8.y, r10.zxyz, r10.zxyz
  max [precise(y)] r8.y, r8.y, l(0.000000)
  rsq [precise(y)] r8.y, r8.y
  mul [precise(xyz)] r10.xyz, r8.yyyy, r10.xyzx
  mul [precise(x)] r8.x, r8.x, cb5[6].y
  add_sat [precise(x)] r8.x, r8.x, -cb5[6].z
  add [precise(xyz)] r11.xyz, -r6.xyzx, r10.zxyz
  mul [precise(xyz)] r11.xyz, r8.xxxx, r11.xyzx
  add [precise(xyz)] r11.xyz, r6.xyzx, r11.xyzx
  dp3 [precise(y)] r8.y, r11.xyzx, r11.xyzx
  rsq [precise(y)] r8.y, r8.y
  mul [precise(xyz)] r11.xyz, r8.yyyy, r11.xyzx
  mul [precise(xyz)] r17.xyz, r7.zxyz, r10.yzxy
  mul [precise(xyz)] r10.xyz, r7.xyzx, r10.xyzx
  add [precise(xyz)] r10.xyz, -r10.xyzx, r17.xyzx
  add [precise(xyz)] r10.xyz, -r5.xyzx, r10.xyzx
  mul [precise(xyz)] r8.xyz, r8.xxxx, r10.xyzx
  add [precise(xyz)] r8.xyz, r5.xyzx, r8.xyzx
  dp3 [precise(x)] r10.x, r8.xyzx, r8.xyzx
  rsq [precise(x)] r10.x, r10.x
  mul [precise(xyz)] r8.xyz, r8.xyzx, r10.xxxx
else 
  mul [precise(xyz)] r10.xyz, v1.xxxx, cb4[2].xyzx
  mul [precise(xyz)] r17.xyz, v1.yyyy, cb4[3].xyzx
  add [precise(xyz)] r10.xyz, r10.xyzx, r17.xyzx
  mul [precise(xyz)] r17.xyz, v1.zzzz, cb4[4].xyzx
  add [precise(xyz)] r10.xyz, r10.xyzx, r17.xyzx
  add [precise(xyz)] r10.xyz, r10.xyzx, cb4[5].xyzx
  add [precise(xyz)] r10.xyz, r10.xyzx, r15.xyzx
  add [precise(xyz)] r10.xyz, -r10.xyzx, r16.xyzx
  dp3 [precise(w)] r11.w, r10.xyzx, r10.xyzx
  max [precise(w)] r11.w, r11.w, l(0.000000)
  rsq [precise(w)] r11.w, r11.w
  mul [precise(xyz)] r10.xyz, r10.xyzx, r11.wwww
  mul [precise(xyz)] r15.xyz, r7.zxyz, r10.zxyz
  mul [precise(xyz)] r17.xyz, r7.xyzx, r10.yzxy
  add [precise(xyz)] r15.xyz, r15.xyzx, -r17.xyzx
  dp3 [precise(w)] r11.w, r15.xyzx, r15.xyzx
  max [precise(w)] r11.w, r11.w, l(0.000000)
  rsq [precise(w)] r11.w, r11.w
  mul [precise(xyz)] r15.xyz, r11.wwww, r15.xyzx
  mul [precise(xyz)] r17.xyz, r7.xyzx, cb5[0].yzxy
  mul [precise(xyz)] r18.xyz, r7.zxyz, cb5[0].zxyz
  add [precise(xyz)] r17.xyz, r17.xyzx, -r18.xyzx
  dp3 [precise(w)] r11.w, r17.xyzx, r17.xyzx
  max [precise(w)] r11.w, r11.w, l(0.000000)
  rsq [precise(w)] r11.w, r11.w
  mul [precise(xyz)] r17.xyz, r11.wwww, r17.xyzx
  lt [precise(xyz)] r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb5[2].yzwy
  mul [precise(xyz)] r19.xyz, r7.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000)
  mul [precise(xyz)] r20.xyz, r7.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  add [precise(xyz)] r19.xyz, r19.xyzx, -r20.xyzx
  dp3 [precise(w)] r11.w, r19.xyzx, r19.xyzx
  max [precise(w)] r11.w, r11.w, l(0.000000)
  rsq [precise(w)] r11.w, r11.w
  mul [precise(xyz)] r19.xyz, r11.wwww, r19.xyzx
  mul [precise(xyz)] r20.xyz, r7.zxyz, r19.zxyz
  mul [precise(xyz)] r7.xyz, r7.xyzx, r19.yzxy
  add [precise(xyz)] r7.xyz, -r7.xyzx, r20.xyzx
  movc [precise(xyz)] r6.xyz, r18.zzzz, r19.xyzx, r6.xyzx
  movc [precise(xyz)] r5.xyz, r18.zzzz, r7.xyzx, r5.xyzx
  movc [precise(xyz)] r6.xyz, r18.yyyy, cb5[0].xyzx, r6.xyzx
  movc [precise(xyz)] r5.xyz, r18.yyyy, -r17.xyzx, r5.xyzx
  movc [precise(xyz)] r11.xyz, r18.xxxx, r15.xyzx, r6.xyzx
  movc [precise(xyz)] r8.xyz, r18.xxxx, -r10.xyzx, r5.xyzx
endif 
mul [precise(x)] r5.x, v2.z, cb5[8].x
add [precise(x)] r5.x, r5.x, cb5[8].y
sincos [precise(x)] r5.x, r6.x, r5.x
mul [precise(xyz)] r7.xyz, r5.xxxx, r8.xyzx
mul [precise(xyz)] r10.xyz, r6.xxxx, r11.xyzx
add [precise(xyz)] r15.xyz, r7.xyzx, r10.xyzx
mul [precise(xyz)] r6.xyz, r6.xxxx, r8.zxyz
mul [precise(xyz)] r5.xyz, r5.xxxx, r11.zxyz
add [precise(xyz)] r5.xyz, -r5.xyzx, r6.xyzx
lt [precise(xy)] r6.xy, l(0.000000, 0.000000, 0.000000, 0.000000), v2.xyxx
lt [precise(xy)] r7.xy, v2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd [precise(xy)] r6.xy, -r6.xyxx, r7.xyxx
itof [precise(xy)] r6.xy, r6.xyxx
if_nz cb0[0].x
  utof [precise(z)] r6.z, v5.x
  utof [precise(x)] r7.x, cb0[0].x
  div [precise(z)] r6.z, r6.z, r7.x
  ge [precise(y)] r7.y, r6.z, -r6.z
  frc [precise(z)] r6.z, r6.z
  movc [precise(z)] r6.z, r7.y, r6.z, -r6.z
  mul [precise(z)] r6.z, r7.x, r6.z
  ftou [precise(z)] r6.z, r6.z
  mul [precise(x)] r7.x, r6.y, r6.x
  lt [precise(x)] r7.x, r7.x, l(0.000000)
  iadd [precise(y)] r7.y, cb0[0].x, l(-1)
  iadd [precise(y)] r7.y, -r6.z, r7.y
  movc [precise(z)] r6.z, r7.x, r7.y, r6.z
  mul [precise(x)] r7.x, cb5[5].y, cb5[5].x
  div [precise(y)] r7.y, v2.w, r7.x
  ge [precise(z)] r7.z, r7.y, -r7.y
  frc [precise(y)] r7.y, |r7.y|
  movc [precise(y)] r7.y, r7.z, r7.y, -r7.y
  mul [precise(x)] r7.x, r7.x, r7.y
  ftou [precise(x)] r7.x, r7.x
  imad [precise(z)] r6.z, r7.x, cb0[0].x, r6.z
  ld_indexable [precise(xy)](buffer)(float,float,float,float) r7.xy, r6.zzzz, t2.xyzw
  lt [precise(xy)] r8.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add [precise(xy)] r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  movc [precise(xy)] r8.xy, r8.xyxx, r10.xyxx, r7.xyxx
else 
  lt r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r10.xy, -v4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  movc r7.xy, r6.xyxx, r10.xyxx, v4.xyxx
  mov [precise(xy)] r8.xy, v4.xyxx
endif 
frc r15.w, v2.w
add r6.x, -r15.w, v2.w
add r6.x, r6.x, l(0.500000)
div r6.y, r6.x, cb5[5].x
ge r6.z, r6.y, -r6.y
frc r6.y, |r6.y|
movc r6.y, r6.z, r6.y, -r6.y
mul r6.xy, r6.xyxx, cb5[5].zxzz
round_ni r10.xy, r6.yxyy
add r6.xy, r7.xyxx, r10.xyxx
mul o3.xy, r6.xyxx, cb5[5].zwzz
mul r6.xyz, r5.zxyz, r15.zxyz
mad r6.xyz, r15.yzxy, r5.xyzx, -r6.xyzx
dp3 r7.x, r6.xyzx, r6.xyzx
rsq r7.x, r7.x
mul r6.xyz, r6.xyzx, r7.xxxx
lt r7.xy, cb5[8].zzzz, l(0.500000, 1.500000, 0.000000, 0.000000)
add r10.xyz, r16.xyzx, -cb5[3].xyzx
dp3 r7.z, r10.xyzx, r10.xyzx
rsq r7.z, r7.z
mul r11.xyz, r7.zzzz, r10.xyzx
dp3 r7.z, cb5[4].xyzx, r10.xyzx
mad r10.xyz, cb5[4].xyzx, r7.zzzz, cb5[3].xyzx
add r10.xyz, -r10.xyzx, r16.xyzx
dp3 r7.z, r10.xyzx, r10.xyzx
rsq r7.z, r7.z
mul r10.xyz, r7.zzzz, r10.xyzx
movc r10.xyz, r7.yyyy, r11.xyzx, r10.xyzx
movc r6.xyz, r7.xxxx, r6.xyzx, r10.xyzx
add r7.x, v1.w, l(10.000000)
mul [precise(xyz)] r10.xyz, r12.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r10.xyz, r13.xyzx, r10.xyzx
add [precise(xyz)] r10.xyz, r10.xyzx, r16.xyzx
add [precise(yz)] r7.yz, r8.xxyx, cb5[9].xxyx
mul [precise(yz)] r7.yz, r7.yyzy, |v2.xxyx|
mul [precise(xyz)] r8.xyz, r7.yyyy, r15.xyzx
add [precise(xyz)] r8.xyz, r8.xyzx, r10.xyzx
mul [precise(xyz)] r10.xyz, r5.yzxy, r7.zzzz
add [precise(xyz)] r11.xyz, r8.xyzx, r10.xyzx
mov [precise(w)] r11.w, l(1.000000)
dp4 [precise(x)] r1.x, r11.xyzw, r1.xyzw
dp4 [precise(y)] r1.y, r11.xyzw, r2.xyzw
dp4 [precise(z)] r1.z, r11.xyzw, r3.xyzw
dp4 [precise(w)] r1.w, r11.xyzw, r4.xyzw
if_nz r0.x
  mul [precise(x)] r0.x, r10.w, l(0.500000)
  mul [precise(x)] r2.x, r0.x, r1.x
  mul [precise(y)] r2.y, r1.w, icb[r0.y + 0].x
  add [precise(x)] r0.x, -r0.x, l(1.000000)
  mul [precise(x)] r0.x, r0.x, r2.y
  add [precise(x)] r0.x, r0.x, r2.x
  mov [precise(x)] r2.x, icb[r0.y + 0].x
  mov r2.y, l(1.000000)
  dp2 o8.x, r1.xwxx, r2.xyxx
  mov [precise(x)] r1.x, r0.x
else 
  mov o8.x, l(0)
endif 
add [precise(xyz)] r2.xyz, -r9.xyzx, r11.xyzx
mul [precise(x)] r0.x, l(2097152.000000), cb2[60].z
add [precise(x)] r0.x, r0.x, cb2[69].z
min [precise(x)] r3.x, r0.x, cb1[109].z
add [precise(x)] r0.x, r0.x, -r3.x
add [precise(w)] r2.w, r0.x, r2.z
dp3 [precise(x)] r0.x, r2.xywx, r2.xywx
rsq [precise(y)] r3.y, r0.x
mul [precise(x)] r0.x, r0.x, r3.y
dp3 [precise(z)] r3.z, r2.xyzx, r2.xyzx
sqrt [precise(z)] r3.z, r3.z
dp3 [precise(z)] r2.z, r2.xyzx, cb2[62].xyzx
div [precise(z)] r2.z, r3.z, r2.z
mul [precise(z)] r2.z, r2.z, cb2[225].z
max [precise(z)] r2.z, r2.z, l(0.000000)
max [precise(z)] r2.z, r2.z, cb1[109].w
lt [precise(z)] r3.z, l(0.000000), r2.z
mul [precise(z)] r2.z, r3.y, r2.z
mul [precise(w)] r3.w, r2.w, r2.z
add [precise(x)] r3.x, r3.w, r3.x
add [precise(z)] r2.z, -r2.z, l(1.000000)
mul [precise(z)] r2.z, r0.x, r2.z
add [precise(x)] r4.x, r3.x, -cb1[110].w
mul [precise(x)] r4.x, r4.x, cb1[110].y
max [precise(x)] r4.x, r4.x, l(-127.000000)
exp [precise(x)] r4.x, -r4.x
mul [precise(x)] r4.x, r4.x, cb1[110].z
add [precise(x)] r3.x, r3.x, -cb1[112].y
mul [precise(x)] r3.x, r3.x, cb1[109].y
max [precise(x)] r3.x, r3.x, l(-127.000000)
exp [precise(x)] r3.x, -r3.x
mul [precise(x)] r3.x, r3.x, cb1[112].x
add [precise(w)] r3.w, r2.w, -r3.w
movc [precise(z)] r2.z, r3.z, r2.z, r0.x
movc [precise(x)] r4.x, r3.z, r4.x, cb1[110].x
movc [precise(x)] r3.x, r3.z, r3.x, cb1[109].x
movc [precise(z)] r3.z, r3.z, r3.w, r2.w
mul [precise(w)] r3.w, r3.z, cb1[109].y
mul [precise(z)] r3.z, r3.z, cb1[110].y
max [precise(zw)] r3.zw, r3.zzzw, l(0.000000, 0.000000, -127.000000, -127.000000)
lt [precise(y)] r4.y, l(0.010000), |r3.w|
exp [precise(z)] r4.z, -r3.w
add [precise(z)] r4.z, -r4.z, l(1.000000)
div [precise(z)] r4.z, r4.z, r3.w
mul [precise(w)] r3.w, r3.w, l(0.240227)
add [precise(w)] r3.w, -r3.w, l(0.693147)
movc [precise(w)] r3.w, r4.y, r4.z, r3.w
mul [precise(x)] r3.x, r3.w, r3.x
lt [precise(w)] r3.w, l(0.010000), |r3.z|
exp [precise(y)] r4.y, -r3.z
add [precise(y)] r4.y, -r4.y, l(1.000000)
div [precise(y)] r4.y, r4.y, r3.z
mul [precise(z)] r3.z, r3.z, l(0.240227)
add [precise(z)] r3.z, -r3.z, l(0.693147)
movc [precise(z)] r3.z, r3.w, r4.y, r3.z
mul [precise(z)] r3.z, r3.z, r4.x
add [precise(x)] r3.x, r3.z, r3.x
lt [precise(w)] r3.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[112].zzzw
if_nz r3.z
  mul r4.xy, l(1.000000, -1.000000, 0.000000, 0.000000), cb1[115].yxyy
  dp2 r4.x, r2.xyxx, r4.xyxx
  dp2 r4.y, r2.xyxx, cb1[115].xyxx
  mov r4.z, r2.w
  sample_l_indexable(texturecube)(float,float,float,float) r8.xyz, r4.xyzx, t0.xyzw, s0, cb1[116].z
  sample_l_indexable(texturecube)(float,float,float,float) r4.xyz, r4.xyzx, t0.xyzw, s0, l(0.000000)
  mad_sat r3.z, r0.x, cb1[116].x, cb1[116].y
  add r4.xyz, -r8.xyzx, r4.xyzx
  mad r4.xyz, r3.zzzz, r4.xyzx, r8.xyzx
  mul r4.xyz, r4.xyzx, cb1[111].xyzx
else 
  mov r4.xyz, cb1[111].xyzx
endif 
ge [precise(z)] r3.z, cb1[113].w, l(0.000000)
eq [precise(w)] r4.w, l(0.000000), cb1[112].z
and [precise(z)] r3.z, r3.z, r4.w
if_nz r3.z
  mul [precise(xyw)] r2.xyw, r2.xyxw, r3.yyyy
  dp3_sat [precise(x)] r2.x, r2.xywx, cb1[113].xyzx
  log [precise(x)] r2.x, r2.x
  mul [precise(x)] r2.x, r2.x, cb1[114].w
  exp [precise(x)] r2.x, r2.x
  mul [precise(xyw)] r2.xyw, r2.xxxx, cb1[114].xyxz
  add [precise(y)] r3.y, r2.z, -cb1[113].w
  max [precise(y)] r3.y, r3.y, l(0.000000)
  mul [precise(y)] r3.y, r3.y, r3.x
  exp [precise(y)] r3.y, -r3.y
  min [precise(y)] r3.y, r3.y, l(1.000000)
  add [precise(y)] r3.y, -r3.y, l(1.000000)
  mul [precise(xyw)] r2.xyw, r2.xyxw, r3.yyyy
else 
  mov [precise(xyw)] r2.xyw, l(0,0,0,0)
endif 
lt [precise(x)] r0.x, cb1[112].w, r0.x
and [precise(x)] r0.x, r0.x, r3.w
mul [precise(z)] r2.z, r2.z, r3.x
exp [precise(z)] r2.z, -r2.z
min [precise(z)] r2.z, r2.z, l(1.000000)
max [precise(z)] r2.z, r2.z, cb1[111].w
movc [precise(w)] r3.w, r0.x, l(1.000000), r2.z
add r2.z, -r3.w, l(1.000000)
movc [precise(xyw)] r2.xyw, r0.xxxx, l(0,0,0,0), r2.xyxw
mad r3.xyz, r4.xyzx, r2.zzzz, r2.xywx
lt [precise(x)] r0.x, l(0.000000), r8.w
if_nz r0.x
  mul r2.xyz, r9.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000)
  mad r2.xyz, r11.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000), -r2.xyzx
  dp3 r0.x, r2.xyzx, r2.xyzx
  sqrt r2.w, r0.x
  add r2.w, -r7.w, r2.w
  max r2.w, r2.w, l(0.000000)
  mul r2.w, r5.w, r2.w
  mul r0.w, r0.w, r2.w
  sqrt r4.z, r0.w
  mul r0.z, r0.z, r4.z
  lt r0.w, r0.z, l(0.707107)
  dp2 r0.z, r0.zzzz, r0.zzzz
  min r0.z, r0.z, l(1.000000)
  movc r0.z, r0.w, r0.z, l(1.000000)
  ne r0.w, r9.w, l(0.000000)
  rsq r0.x, r0.x
  mul r2.xyz, r0.xxxx, r2.xyzx
  mad r0.x, -r2.z, r2.z, l(1.000000)
  sqrt r0.x, r0.x
  mad r8.y, r2.z, l(0.500000), l(0.500000)
  div r2.xy, r2.xyxx, r0.xxxx
  add r0.x, -|r2.x|, l(1.000000)
  sqrt r0.x, r0.x
  mad r2.z, |r2.x|, l(-0.018729), l(0.074261)
  mad r2.z, r2.z, |r2.x|, l(-0.212114)
  mad r2.z, r2.z, |r2.x|, l(1.570729)
  mul r2.w, r0.x, r2.z
  mad r2.w, r2.w, l(-2.000000), l(3.141593)
  lt r2.x, r2.x, -r2.x
  and r2.x, r2.x, r2.w
  mad r0.x, r2.z, r0.x, r2.x
  lt r2.x, r2.y, l(0.000000)
  add r2.y, -r0.x, l(6.283185)
  movc r0.x, r2.x, r2.y, r0.x
  mul r8.x, r0.x, l(0.159155)
  mad r2.xy, r14.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), r8.xyxx
  add r2.zw, r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  div r2.zw, r14.xxxy, r2.zzzw
  mul r2.xy, r2.zwzz, r2.xyxx
  div r2.zw, r1.xxxy, r1.wwww
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  movc r4.xy, r0.wwww, r2.xyxx, r2.zwzz
  sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r4.xyzx, t1.xyzw, s1, l(0.000000)
  mul r2.xyz, r0.zzzz, r2.xyzx
  mul r2.xyz, r6.wwww, r2.xyzx
  mad o6.xyz, r2.xyzx, r3.wwww, r3.xyzx
  add r0.x, -r2.w, l(1.000000)
  mad r0.x, -r0.z, r0.x, l(1.000000)
  mul o6.w, r0.x, r3.w
else 
  mov [precise(w)] o6.xyzw, r3.xyzw
endif 
mul r0.xzw, r5.xxyz, r6.yyzx
mad r0.xzw, r5.zzxy, r6.zzxy, -r0.xxzw
dp3 r0.x, r0.xzwx, r15.xyzx
lt r0.z, l(0.000000), r0.x
lt r0.x, r0.x, l(0.000000)
iadd r0.x, -r0.z, r0.x
itof o1.w, r0.x
mul r0.x, r7.x, r7.x
mul r0.xzw, r0.xxxx, l(1361.456299, 0.000000, 2333.577881, 3623.982910)
frc r0.xzw, r0.xxzw
mad r0.xzw, r0.xxzw, l(2.000000, 0.000000, 2.000000, 2.000000), l(-1.000000, 0.000000, -1.000000, -1.000000)
mul r2.x, l(0.500000), cb2[145].w
mul o4.xyz, r0.xzwx, r2.xxxx
mov [precise(xyz)] o0.xyzw, r15.xyzw
mov o1.xyz, r6.xyzx
mov o2.xyzw, v3.xyzw
mov o3.zw, l(0,0,0,0)
mov [precise] o7.xyzw, r1.xyzw
mov [precise(x)] o5.x, r0.y
ret 
// Approximately 449 instruction slots used
