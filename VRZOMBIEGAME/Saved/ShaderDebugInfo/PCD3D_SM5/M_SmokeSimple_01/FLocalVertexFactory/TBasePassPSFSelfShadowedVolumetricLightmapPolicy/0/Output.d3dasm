//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 View_View_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 View_View_ViewForward;      // Offset:  992 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 View_View_ViewRectMin;      // Offset: 1984 Size:    16
//   float4 View_View_LightProbeSizeRatioAndInvSizeRatio;// Offset: 2016 Size:    16
//   float View_View_PreExposure;       // Offset: 2084 Size:     4
//   float4 View_View_DiffuseOverrideParameter;// Offset: 2096 Size:    16
//   float4 View_View_SpecularOverrideParameter;// Offset: 2112 Size:    16
//   float4 View_View_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 View_View_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//   float View_View_OutOfBoundsMask;   // Offset: 2160 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2208 Size:     4
//   float View_View_UnlitViewmodeMask; // Offset: 2240 Size:     4
//   float3 View_View_PrecomputedIndirectLightingColorScale;// Offset: 2464 Size:    12
//   float3 View_View_PrecomputedIndirectSpecularColorScale;// Offset: 2480 Size:    12
//   float View_View_RenderingReflectionCaptureMask;// Offset: 2860 Size:     4
//   float View_View_ReflectionCubemapMaxMip;// Offset: 3048 Size:     4
//   float3 View_View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;// Offset: 3072 Size:    12
//   float3 View_View_VolumetricFogInvGridSize;// Offset: 3568 Size:    12
//   float3 View_View_VolumetricFogGridZParams;// Offset: 3584 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVScale;// Offset: 3616 Size:    12
//   float3 View_View_VolumetricLightmapWorldToUVAdd;// Offset: 3632 Size:    12
//   float3 View_View_VolumetricLightmapIndirectionTextureSize;// Offset: 3648 Size:    12
//   float View_View_VolumetricLightmapBrickSize;// Offset: 3660 Size:     4
//   float3 View_View_VolumetricLightmapBrickTexelSize;// Offset: 3664 Size:    12
//
// }
//
// cbuffer InstancedView
// {
//
//   row_major float4x4 InstancedView_InstancedView_RelativeWorldToClip;// Offset:   64 Size:    64
//   row_major float4x4 InstancedView_InstancedView_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 InstancedView_InstancedView_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 InstancedView_InstancedView_ViewTilePosition;// Offset:  960 Size:    12
//   float3 InstancedView_InstancedView_MatrixTilePosition;// Offset:  976 Size:    12
//   float3 InstancedView_InstancedView_ViewForward;// Offset:  992 Size:    12
//   float3 InstancedView_InstancedView_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 InstancedView_InstancedView_ViewRectMin;// Offset: 1984 Size:    16
//   float4 InstancedView_InstancedView_NormalOverrideParameter;// Offset: 2128 Size:    16
//   float2 InstancedView_InstancedView_RoughnessOverrideParameter;// Offset: 2144 Size:     8
//
// }
//
// cbuffer ReflectionCapture
// {
//
//   float4 ReflectionCapture_ReflectionCapture_CaptureProperties[341];// Offset: 10912 Size:  5456
//   float4 ReflectionCapture_ReflectionCapture_CaptureOffsetAndAverageBrightness[341];// Offset: 16368 Size:  5456
//
// }
//
// cbuffer TranslucentBasePass
// {
//
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_NumLocalLights;// Offset:    0 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_HasDirectionalLight;// Offset:    8 Size:     4
//   int3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_CulledGridSize;// Offset:   16 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_LightGridPixelSizeShift;// Offset:   32 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_LightGridZParams;// Offset:   48 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightColor;// Offset:   80 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask;// Offset:   96 Size:     4
//   float2 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD;// Offset:  104 Size:     8
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_NumDirectionalLightCascades;// Offset:  112 Size:     4
//   int TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightVSM;// Offset:  116 Size:     4
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_CascadeEndDepths;// Offset:  128 Size:    16
//   row_major float4x4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix[4];// Offset:  144 Size:   256
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapMinMax[4];// Offset:  400 Size:    64
//   float4 TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize;// Offset:  464 Size:    16
//   uint TranslucentBasePass_TranslucentBasePass_Shared_Forward_DirectLightingShowFlag;// Offset:  576 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_NumLocalLights;// Offset:  656 Size:     4
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_HasDirectionalLight;// Offset:  664 Size:     4
//   int3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_CulledGridSize;// Offset:  672 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_LightGridPixelSizeShift;// Offset:  688 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_LightGridZParams;// Offset:  704 Size:    12
//   float3 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightColor;// Offset:  736 Size:    12
//   uint TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowMapChannelMask;// Offset:  752 Size:     4
//   float2 TranslucentBasePass_TranslucentBasePass_Shared_ForwardISR_DirectionalLightDistanceFadeMAD;// Offset:  760 Size:     8
//   float TranslucentBasePass_TranslucentBasePass_Shared_Fog_ApplyVolumetricFog;// Offset: 1868 Size:     4
//   float3 TranslucentBasePass_TranslucentBasePass_TranslucencyGIGridZParams;// Offset: 2960 Size:    12
//   int3 TranslucentBasePass_TranslucentBasePass_TranslucencyGIGridSize;// Offset: 2976 Size:    12
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[3];// Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_SharedBilinearClampedSampler    sampler      NA          NA             s0      1 
// TranslucentBasePass_Shared_Forward_ShadowmapSampler    sampler      NA          NA             s1      1 
// TranslucentBasePass_Shared_Reflection_ReflectionCubemapSampler    sampler      NA          NA             s2      1 
// TranslucentBasePass_TranslucencyGIVolumeSampler    sampler      NA          NA             s3      1 
// Material_Texture2D_0Sampler       sampler      NA          NA             s4      1 
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// VirtualShadowMap_ProjectionData    texture    byte         r/o             t1      1 
// VirtualShadowMap_PageTable        texture    byte         r/o             t2      1 
// View_VolumetricLightmapIndirectionTexture    texture   uint4          3d             t3      1 
// View_VolumetricLightmapBrickAmbientVector    texture  float4          3d             t4      1 
// View_DirectionalLightShadowingBrickTexture    texture  float4          3d             t5      1 
// TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlas    texture  float4          2d             t6      1 
// TranslucentBasePass_Shared_Forward_ForwardLocalLightBuffer    texture  float4         buf             t7      1 
// TranslucentBasePass_Shared_Forward_NumCulledLightsGrid    texture   uint4         buf             t8      1 
// TranslucentBasePass_Shared_Forward_CulledLightDataGrid    texture   uint4         buf             t9      1 
// TranslucentBasePass_Shared_ForwardISR_ForwardLocalLightBuffer    texture  float4         buf            t10      1 
// TranslucentBasePass_Shared_ForwardISR_NumCulledLightsGrid    texture   uint4         buf            t11      1 
// TranslucentBasePass_Shared_ForwardISR_CulledLightDataGrid    texture   uint4         buf            t12      1 
// TranslucentBasePass_Shared_Reflection_ReflectionCubemap    texture  float4   cubearray            t13      1 
// TranslucentBasePass_Shared_Fog_IntegratedLightScattering    texture  float4          3d            t14      1 
// TranslucentBasePass_Shared_FogISR_IntegratedLightScattering    texture  float4          3d            t15      1 
// TranslucentBasePass_TranslucencyGIVolumeHistory0    texture  float4          3d            t16      1 
// VirtualShadowMap_PhysicalPagePool    texture   uint4          2d            t17      1 
// Material_Texture2D_0              texture  float4          2d            t18      1 
// View                              cbuffer      NA          NA            cb0      1 
// InstancedView                     cbuffer      NA          NA            cb1      1 
// ReflectionCapture                 cbuffer      NA          NA            cb2      1 
// TranslucentBasePass               cbuffer      NA          NA            cb3      1 
// Material                          cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// PRIMITIVE_ID             0    y          3     NONE    uint    y  
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[230], immediateIndexed
dcl_constantbuffer CB1[135], immediateIndexed
dcl_constantbuffer CB2[1364], dynamicIndexed
dcl_constantbuffer CB3[187], dynamicIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_raw t2
dcl_resource_texture3d (uint,uint,uint,uint) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (float,float,float,float) t10
dcl_resource_buffer (uint,uint,uint,uint) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_texturecubearray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t14
dcl_resource_texture3d (float,float,float,float) t15
dcl_resource_texture3d (float,float,float,float) t16
dcl_resource_texture2d (uint,uint,uint,uint) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps constant v3.y
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 28
if_z v3.x
  mov r0.x, cb0[44].x
  mov r0.y, cb0[45].x
  mov r0.z, cb0[46].x
  mov r0.w, cb0[47].x
  mov r1.x, cb0[44].y
  mov r1.y, cb0[45].y
  mov r1.z, cb0[46].y
  mov r1.w, cb0[47].y
  mov r2.x, cb0[44].z
  mov r2.y, cb0[45].z
  mov r2.z, cb0[46].z
  mov r2.w, cb0[47].z
  mov r3.x, cb0[44].w
  mov r3.y, cb0[45].w
  mov r3.z, cb0[46].w
  mov r3.w, cb0[47].w
  mov r4.x, cb0[4].x
  mov r4.y, cb0[5].x
  mov r4.z, cb0[6].x
  mov r4.w, cb0[7].x
  mov r5.x, cb0[4].y
  mov r5.y, cb0[5].y
  mov r5.z, cb0[6].y
  mov r5.w, cb0[7].y
  mov r6.x, cb0[4].w
  mov r6.y, cb0[5].w
  mov r6.z, cb0[6].w
  mov r6.w, cb0[7].w
  mov r7.xyz, cb0[62].xyzx
  mov r9.xyz, -cb0[61].xyzx
  mov r10.xyz, -cb0[60].xyzx
  mov r11.xyz, cb0[72].xyzx
  mov r12.xy, cb0[124].xyxx
  mov r7.w, cb0[31].w
  mov r8.xyzw, cb0[133].xyzw
  mov r9.w, cb0[134].x
  mov r10.w, cb0[134].y
else 
  mov r0.x, cb1[44].x
  mov r0.y, cb1[45].x
  mov r0.z, cb1[46].x
  mov r0.w, cb1[47].x
  mov r1.x, cb1[44].y
  mov r1.y, cb1[45].y
  mov r1.z, cb1[46].y
  mov r1.w, cb1[47].y
  mov r2.x, cb1[44].z
  mov r2.y, cb1[45].z
  mov r2.z, cb1[46].z
  mov r2.w, cb1[47].z
  mov r3.x, cb1[44].w
  mov r3.y, cb1[45].w
  mov r3.z, cb1[46].w
  mov r3.w, cb1[47].w
  mov r4.x, cb1[4].x
  mov r4.y, cb1[5].x
  mov r4.z, cb1[6].x
  mov r4.w, cb1[7].x
  mov r5.x, cb1[4].y
  mov r5.y, cb1[5].y
  mov r5.z, cb1[6].y
  mov r5.w, cb1[7].y
  mov r6.x, cb1[4].w
  mov r6.y, cb1[5].w
  mov r6.z, cb1[6].w
  mov r6.w, cb1[7].w
  mov r7.xyz, cb1[62].xyzx
  mov r9.xyz, -cb1[61].xyzx
  mov r10.xyz, -cb1[60].xyzx
  mov r11.xyz, cb1[72].xyzx
  mov r12.xy, cb1[124].xyxx
  mov r7.w, cb1[31].w
  mov r8.xyzw, cb1[133].xyzw
  mov r9.w, cb1[134].x
  mov r10.w, cb1[134].y
endif 
mov r13.xyz, v5.xyzx
mov r13.w, l(1.000000)
dp4 r0.x, r13.xyzw, r0.xyzw
dp4 r0.y, r13.xyzw, r1.xyzw
dp4 r0.z, r13.xyzw, r2.xyzw
dp4 r0.w, r13.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r11.xyzx, r0.xyzx
ge r0.w, r7.w, l(1.000000)
dp3 r1.w, -r0.xyzx, -r0.xyzx
rsq r1.w, r1.w
mul r2.xyz, -r0.xyzx, r1.wwww
movc r2.xyz, r0.wwww, -r7.xyzx, r2.xyzx
mad r3.xyz, r8.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r8.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
mul r7.xyz, r3.yyyy, r7.xyzx
mad r3.xyw, r3.xxxx, v0.xyxz, r7.xyxz
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t18.xyzw, s4, cb0[138].x
mad r0.w, r10.w, l(0.500000), r9.w
mov_sat r7.xyzw, r7.xyzw
mad r8.xyz, r10.xyzx, l(-2097152.000000, -2097152.000000, -2097152.000000, 0.000000), r1.xyzx
mad r8.xyz, r8.xyzx, cb0[226].xyzx, cb0[227].xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r8.xyz, r8.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[228].xyzx
ftoi r11.xyz, r8.xyzx
mov r11.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r11.xyzw, r11.xyzw, t3.xyzw
utof r11.xyzw, r11.xyzw
add r1.w, l(1.000000), cb0[228].w
div r8.xyz, r8.xyzx, r11.wwww
frc r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[228].wwww
mad r8.xyz, r11.xyzx, r1.wwww, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[229].xyzx
imul null, r1.w, v3.y, l(40)
ishl r2.w, r1.w, l(4)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.w, r2.w, t0.xxxx
and r11.xyzw, r3.wwww, l(4, 1024, 2048, 4096)
if_nz r11.x
  sample_l_indexable(texture3d)(float,float,float,float) r12.z, r8.xyzx, t5.zwxy, s0, l(0.000000)
else 
  mov r12.z, l(1.000000)
endif 
mad r13.xyz, r7.xyzx, cb0[131].wwww, cb0[131].xyzx
mad r14.xyz, cb0[132].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb0[132].xyzx
ne r3.w, l(0.000000), cb0[178].w
mad r15.xyz, r14.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r13.xyzx
movc r13.xyz, r3.wwww, r15.xyzx, r13.xyzx
movc r14.xyz, r3.wwww, l(0,0,0,0), r14.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t4.xyzw, s0, l(0.000000)
mul r8.xyz, r8.xyzx, l(0.886228, 0.886228, 0.886228, 0.000000)
ilt r3.w, l(0), cb3[186].z
if_nz r3.w
  add r15.xyz, r9.xyzx, -r10.xyzx
  mad r15.xyz, r15.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
  mov r15.w, l(1.000000)
  dp4 r16.x, r15.xyzw, r4.xyzw
  dp4 r16.y, r15.xyzw, r5.xyzw
  dp4 r3.w, r15.xyzw, r6.xyzw
  div r15.xy, r16.xyxx, r3.wwww
  mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r3.w, r3.w, cb3[185].x, cb3[185].y
  log r3.w, r3.w
  mul r3.w, r3.w, cb3[185].z
  itof r8.w, cb3[186].z
  div r15.z, r3.w, r8.w
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t16.xyzw, s3, l(0.000000)
  mul r15.xyz, r15.xyzx, l(0.886228, 0.886228, 0.886228, 0.000000)
  max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r15.xyz, r15.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
else 
  mov r15.xyz, l(0,0,0,0)
endif 
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[154].xyzx
mad r8.xyz, r8.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000), r15.xyzx
if_z v3.x
  mov r3.w, cb3[2].x
  mov r8.w, cb3[3].x
  mov r9.w, cb3[3].y
  mov r10.w, cb3[3].z
  mov r11.x, cb3[1].z
else 
  mov r3.w, cb3[43].x
  mov r8.w, cb3[44].x
  mov r9.w, cb3[44].y
  mov r10.w, cb3[44].z
  mov r11.x, cb3[42].z
endif 
add r12.xy, -r12.xyxx, v5.xyxx
mul r12.xy, r12.xyxx, cb0[126].zwzz
ftou r12.xy, r12.xyxx
ushr r12.xy, r12.xyxx, r3.wwww
if_z v3.x
  mov r15.xy, cb3[1].xyxx
else 
  mov r15.xy, cb3[42].xyxx
endif 
mad r3.w, v5.w, r8.w, r9.w
log r3.w, r3.w
mul r3.w, r10.w, r3.w
max r3.w, r3.w, l(0.000000)
ftou r3.w, r3.w
iadd r8.w, r11.x, l(-1)
umin r3.w, r3.w, r8.w
imad r3.w, r3.w, r15.y, r12.y
imad r3.w, r3.w, r15.x, r12.x
movc r11.xyz, r11.yzwy, l(1,1,1,0), l(0,0,0,0)
imad r8.w, r11.y, l(2), r11.x
imad r8.w, r11.z, l(4), r8.w
if_z v3.x
  mov r11.xyz, cb3[5].xyzx
  mov r9.w, cb3[0].z
  mov r10.w, cb3[6].x
  mov r11.w, cb3[6].z
  mov r12.x, cb3[6].w
else 
  mov r11.xyz, cb3[46].xyzx
  mov r9.w, cb3[41].z
  mov r10.w, cb3[47].x
  mov r11.w, cb3[47].z
  mov r12.x, cb3[47].w
endif 
if_nz r9.w
  and r15.xyz, r10.wwww, l(2, 4, 8, 0)
  movc r15.yzw, r15.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb3[7].x
    ge r16.xyzw, v5.wwww, cb3[8].xyzw
    and r16.xyzw, r16.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    add r9.w, r16.y, r16.x
    add r9.w, r16.z, r9.w
    add r9.w, r16.w, r9.w
    ftou r9.w, r9.w
    ult r12.y, r9.w, cb3[7].x
    if_nz r12.y
      ishl r12.y, r9.w, l(2)
      mul r16.xyzw, r0.yyyy, cb3[r12.y + 10].xyzw
      mad r16.xyzw, r0.xxxx, cb3[r12.y + 9].xyzw, r16.xyzw
      mad r16.xyzw, r0.zzzz, cb3[r12.y + 11].xyzw, r16.xyzw
      add r16.xyzw, r16.xyzw, cb3[r12.y + 12].xyzw
      div r16.xy, r16.xyxx, r16.wwww
      ge r17.xy, r16.xyxx, cb3[r9.w + 25].xyxx
      ge r17.zw, cb3[r9.w + 25].zzzw, r16.xxxy
      and r17.xy, r17.zwzz, r17.xyxx
      and r9.w, r17.y, r17.x
      if_nz r9.w
        mad r16.xy, r16.xyxx, cb3[29].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
        frc r17.xy, r16.xyxx
        round_ni r16.xy, r16.xyxx
        add r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
        mul r16.xy, r16.xyxx, cb3[29].zwzz
        gather4_indexable(texture2d)(float,float,float,float) r18.xyzw, r16.xyxx, t6.xyzw, s1.x
        add r9.w, -r16.z, l(1.000000)
        mad r9.w, r9.w, l(4000.000000), l(-1.000000)
        mad_sat r16.xyzw, r18.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), -r9.wwww
        add r16.yz, -r16.wwxw, r16.zzyz
        mad r16.xy, r17.xxxx, r16.yzyy, r16.wxww
        add r9.w, -r16.x, r16.y
        mad r9.w, r17.y, r9.w, r16.x
      else 
        mov r9.w, l(1.000000)
      endif 
    else 
      mov r9.w, l(1.000000)
    endif 
  else 
    mov r9.w, l(1.000000)
  endif 
  ine r12.y, l(-1), cb3[7].y
  if_nz r12.y
    add r16.xyz, r0.xyzx, -cb0[72].xyzx
    imad r17.xyzw, cb3[7].yyyy, l(336, 336, 336, 336), l(128, 144, 160, 176)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r18.xyzw, r17.x, t1.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r19.xyzw, r17.y, t1.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r20.xyzw, r17.z, t1.xyzw
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r17.xyzw, r17.w, t1.xyzw
    imad r21.xyz, cb3[7].yyyy, l(336, 336, 336, 0), l(256, 272, 288, 0)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyzw, r21.x, t1.xyzw
    if_z r22.w
      add r23.xyz, r22.xyzx, cb0[60].xyzx
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r21.xzw, r21.z, t1.xxyz
      add r21.xzw, r16.xxyz, r21.xxzw
      mad r21.xzw, r23.xxyz, l(2097152.000000, 0.000000, 2097152.000000, 2097152.000000), r21.xxzw
      dp3 r12.y, r21.xzwx, r21.xzwx
      sqrt r12.y, r12.y
      log r12.y, r12.y
      imad r21.xz, cb3[7].yyyy, l(336, 0, 336, 0), l(300, 0, 316, 0)
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r13.w, r21.x, t1.xxxx
      add r12.y, r12.y, r13.w
      round_ni r12.y, r12.y
      ftoi r12.y, r12.y
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r21.xz, r21.z, t1.xxyx
      iadd r12.y, r12.y, -r21.x
      imax r12.y, r12.y, l(0)
      ilt r13.w, r12.y, r21.z
      if_nz r13.w
        iadd r12.y, r12.y, cb3[7].y
        imad r23.xyzw, r12.yyyy, l(336, 336, 336, 336), l(128, 144, 160, 176)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r21.xzw, r23.x, t1.xxyz
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xyz, r23.y, t1.xyzx
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.xyz, r23.z, t1.xyzx
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.xyz, r23.w, t1.xyzx
        imad r26.xy, r12.yyyy, l(336, 336, 0, 0), l(256, 272, 0, 0)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r26.xzw, r26.x, t1.xxyz
        add r26.xzw, r26.xxzw, cb0[60].xxyz
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r27.xyz, r26.y, t1.xyzx
        add r27.xyz, r16.xyzx, r27.xyzx
        mad r26.xyz, r26.xzwx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r27.xyzx
        mul r24.xyz, r24.xyzx, r26.yyyy
        mad r21.xzw, r26.xxxx, r21.xxzw, r24.xxyz
        mad r21.xzw, r26.zzzz, r23.xxyz, r21.xxzw
        add r21.xzw, r25.xxyz, r21.xxzw
        mul r23.xy, r21.xzxx, l(128.000000, 128.000000, 0.000000, 0.000000)
        ftou r23.xy, r23.xyxx
        ishl r13.w, r23.y, l(7)
        iadd r13.w, r13.w, r23.x
        imad r13.w, r12.y, l(0x00005555), r13.w
        ishl r13.w, r13.w, l(2)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r13.w, r13.w, t2.xxxx
        and r14.w, r13.w, l(0x08000000)
        if_nz r14.w
          ubfe r14.w, l(6), l(20), r13.w
          if_nz r14.w
            ushr r16.w, r13.w, l(20)
            imad r23.zw, r12.yyyy, l(0, 0, 336, 336), l(0, 0, 304, 112)
            iadd r12.y, r12.y, r14.w
            imad r24.xy, r12.yyyy, l(336, 336, 0, 0), l(304, 112, 0, 0)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.x, r23.z, t1.xxxx
            imad r14.w, l(1), l(4), r23.z
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.y, r14.w, t1.xxxx
            imad r23.xy, l(-32, -32, 0, 0), r25.xyxx, r23.xyxx
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xz, r24.x, t1.xxyx
            ishl r25.zw, r24.xxxz, l(0, 0, 5, 5)
            ishl r25.zw, r25.zzzw, r16.wwww
            iadd r23.xy, r23.xyxx, r25.zwzz
            ushr r23.xy, r23.xyxx, r16.wwww
            ishl r25.zw, r23.xxxy, l(0, 0, 7, 7)
            ishl r14.w, l(1), r16.w
            utof r14.w, r14.w
            div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
            iadd r16.w, r23.x, r25.w
            imad r12.y, r12.y, l(0x00005555), r16.w
            iadd r16.w, r24.y, l(8)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r16.w, r16.w, t1.xxxx
            iadd r23.z, r23.w, l(8)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r23.z, r23.z, t1.xxxx
            mad r16.w, -r14.w, r23.z, r16.w
            itof r23.zw, r24.xxxz
            itof r24.xy, r25.xyxx
            mad r23.zw, -r24.xxxy, r14.wwww, r23.zzzw
            mul r23.zw, r23.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
            mad r23.zw, r21.xxxz, r14.wwww, r23.zzzw
            mul r23.zw, r23.zzzw, l(0.000000, 0.000000, 16384.000000, 16384.000000)
            ftou r23.zw, r23.zzzw
            bfi r23.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r23.xyxx, l(127, 127, 0, 0)
            umax r23.zw, r25.zzzw, r23.zzzw
            umin r23.xy, r23.xyxx, r23.zwzz
            ishl r12.y, r12.y, l(2)
            ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.y, r12.y, t2.xxxx
            and r24.xz, r12.yyyy, l(1023, 0, 0x08000000, 0)
            ine r23.z, r24.z, l(0)
            ubfe r24.yw, l(0, 10, 0, 6), l(0, 10, 0, 20), r12.yyyy
            ieq r12.y, r24.w, l(0)
            and r23.z, r12.y, r23.z
          else 
            mul r21.xz, r21.xxzx, l(16384.000000, 0.000000, 16384.000000, 0.000000)
            ftou r23.xy, r21.xzxx
            and r24.x, r13.w, l(1023)
            ubfe r24.y, l(10), l(10), r13.w
            mov r14.w, l(1.000000)
            mov r16.w, l(0)
            mov r23.z, l(-1)
          endif 
          if_nz r23.z
            bfi r24.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r24.xyxx, r23.xyxx
            mov r24.zw, l(0,0,0,0)
            ld_indexable(texture2d)(uint,uint,uint,uint) r12.y, r24.xyzw, t17.yxzw
            add r12.y, -r16.w, r12.y
            div r12.y, r12.y, r14.w
          else 
            mov r12.y, l(0)
          endif 
        else 
          mov r12.y, l(0)
          mov r23.z, l(0)
        endif 
        lt r12.y, r21.w, r12.y
        movc r12.y, r12.y, l(0), l(1.000000)
        and r12.y, r12.y, r23.z
      else 
        mov r12.y, l(0)
        mov r23.z, l(0)
      endif 
    else 
      add r21.xzw, r22.xxyz, cb0[60].xxyz
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyz, r21.y, t1.xyzx
      add r16.xyz, r16.xyzx, r22.xyzx
      mad r16.xyz, r21.xzwx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r16.xyzx
      ine r13.w, r22.w, l(2)
      if_nz r13.w
        ge r21.xy, |r16.xxxx|, |r16.yzyy|
        and r13.w, r21.y, r21.x
        lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r16.xyzx
        lt r14.w, |r16.z|, |r16.y|
        movc r21.xyz, r21.xyzx, l(0,2,4,0), l(1,3,5,0)
        movc r14.w, r14.w, r21.y, r21.z
        movc r13.w, r13.w, r21.x, r14.w
        iadd r13.w, r13.w, cb3[7].y
        imad r21.xyzw, r13.wwww, l(336, 336, 336, 336), l(128, 144, 160, 176)
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r22.xyzw, r21.x, t1.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r24.xyzw, r21.y, t1.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r25.xyzw, r21.z, t1.xyzw
        ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r17.xyzw, r21.w, t1.xyzw
        mov r21.x, r22.x
        mov r21.y, r24.x
        mov r21.z, r25.x
        mov r21.w, r17.x
        mov r26.x, r22.y
        mov r26.y, r24.y
        mov r26.z, r25.y
        mov r26.w, r17.y
        mov r27.x, r22.z
        mov r27.y, r24.z
        mov r27.z, r25.z
        mov r27.w, r17.z
        mov r17.x, r22.w
        mov r17.y, r24.w
        mov r17.z, r25.w
      else 
        mov r21.x, r18.x
        mov r21.y, r19.x
        mov r21.z, r20.x
        mov r21.w, r17.x
        mov r26.x, r18.y
        mov r26.y, r19.y
        mov r26.z, r20.y
        mov r26.w, r17.y
        mov r27.x, r18.z
        mov r27.y, r19.z
        mov r27.z, r20.z
        mov r27.w, r17.z
        mov r17.x, r18.w
        mov r17.y, r19.w
        mov r17.z, r20.w
        mov r13.w, cb3[7].y
      endif 
      mov r16.w, l(1.000000)
      dp4 r18.x, r16.xyzw, r21.xyzw
      dp4 r18.y, r16.xyzw, r26.xyzw
      dp4 r18.z, r16.xyzw, r27.xyzw
      dp4 r14.w, r16.xyzw, r17.xyzw
      div r16.xyz, r18.xyzx, r14.wwww
      mul r17.xy, r16.xyxx, l(128.000000, 128.000000, 0.000000, 0.000000)
      ftou r17.xy, r17.xyxx
      ishl r14.w, r17.y, l(7)
      iadd r14.w, r14.w, r17.x
      imad r13.w, r13.w, l(0x00005555), r14.w
      ishl r13.w, r13.w, l(2)
      ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r13.w, r13.w, t2.xxxx
      and r14.w, r13.w, l(0x08000000)
      if_nz r14.w
        and r17.x, r13.w, l(1023)
        ubfe r17.y, l(10), l(10), r13.w
        ushr r13.w, r13.w, l(20)
        ushr r13.w, l(0x00004000), r13.w
        utof r13.w, r13.w
        mul r16.xy, r13.wwww, r16.xyxx
        ftou r16.xy, r16.xyxx
        bfi r17.xy, l(25, 25, 0, 0), l(7, 7, 0, 0), r17.xyxx, r16.xyxx
        mov r17.zw, l(0,0,0,0)
        ld_indexable(texture2d)(uint,uint,uint,uint) r16.x, r17.xyzw, t17.xyzw
      else 
        mov r16.x, l(0)
      endif 
      mov r16.y, l(-1)
      movc r23.zw, r14.wwww, r16.yyyx, l(0,0,0,0)
      lt r13.w, r16.z, r23.w
      movc r13.w, r13.w, l(0), l(1.000000)
      movc r12.y, r14.w, r13.w, l(0)
    endif 
    movc r12.y, r23.z, r12.y, l(1.000000)
    mul r9.w, r9.w, r12.y
  endif 
  mad_sat r11.w, v5.w, r11.w, r12.x
  mov r15.x, l(1.000000)
  dp4 r12.x, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r12.y, r12.x, l(-1.000000)
  mad r12.x, r12.x, r12.y, l(1.000000)
  mul r11.w, r11.w, r11.w
  add r12.x, -r9.w, r12.x
  mad r9.w, r11.w, r12.x, r9.w
  min r11.w, r9.w, l(1.000000)
  add r11.w, r9.w, r11.w
  lt r11.w, l(0.000000), r11.w
  if_nz r11.w
    mul r15.xyz, r13.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
    mul r11.xyz, r9.wwww, r11.xyzx
    mul r11.xyz, r11.xyzx, r15.xyzx
  else 
    mov r11.xyz, l(0,0,0,0)
  endif 
  ushr r9.w, r10.w, l(8)
  and r9.w, r8.w, r9.w
  movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)
  mov r12.z, l(1.000000)
else 
  mov r11.xyz, l(0,0,0,0)
endif 
if_z v3.x
  ishl r9.w, r3.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t8.yzwx
  umin r9.w, r9.w, cb3[0].x
  bfi r10.w, l(31), l(1), r3.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t8.yzwx
else 
  ishl r11.w, r3.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t11.yzwx
  umin r9.w, r11.w, cb3[41].x
  bfi r3.w, l(31), l(1), r3.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r3.wwww, t11.yzwx
endif 
movc r3.w, v3.x, cb3[41].x, cb3[0].x
umin r3.w, r3.w, r9.w
mul r15.xyz, r13.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
mov r12.w, l(1.000000)
mov r16.xyz, r11.xyzx
mov r9.w, l(0)
loop 
  uge r11.w, r9.w, r3.w
  breakc_nz r11.w
  iadd r11.w, r9.w, r10.w
  if_z v3.x
    ld_indexable(buffer)(uint,uint,uint,uint) r12.x, r11.wwww, t9.xyzw
    imul null, r12.y, r12.x, l(6)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.yyyy, t7.xyzw
    imad r12.y, r12.x, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r12.yyyy, t7.xyzw
    imad r19.xyz, r12.xxxx, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r19.xxxx, t7.xywz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.yyyy, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r19.zzzz, t7.xyzw
  else 
    ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t12.yzwx
    imul null, r12.x, r11.w, l(6)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.xxxx, t10.xyzw
    imad r12.x, r11.w, l(6), l(1)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r12.xxxx, t10.xyzw
    imad r22.xyz, r11.wwww, l(6, 6, 6, 0), l(3, 2, 4, 0)
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r22.xxxx, t10.xywz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r22.yyyy, t10.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r22.zzzz, t10.xyzw
  endif 
  eq r11.w, r18.w, l(0.000000)
  add r17.xyz, -r0.xyzx, r17.xyzx
  dp3 r12.x, r17.xyzx, r17.xyzx
  mul r12.y, r17.w, r17.w
  mul r12.y, r12.y, r12.x
  mad r12.y, -r12.y, r12.y, l(1.000000)
  max r12.y, r12.y, l(0.000000)
  mul r12.y, r12.y, r12.y
  mul r22.xyz, r17.wwww, r17.xyzx
  dp3 r13.w, r22.xyzx, r22.xyzx
  min r13.w, r13.w, l(1.000000)
  add r13.w, -r13.w, l(1.000000)
  log r13.w, r13.w
  mul r13.w, r13.w, r18.w
  exp r13.w, r13.w
  movc r12.y, r11.w, r12.y, r13.w
  lt r13.w, l(-2.000000), r20.x
  rsq r12.x, r12.x
  mul r22.xyz, r12.xxxx, r17.xyzx
  dp3 r12.x, r22.xyzx, r21.xyzx
  add r12.x, -r20.x, r12.x
  mul_sat r12.x, r20.y, r12.x
  mul r12.x, r12.x, r12.x
  mul r12.x, r12.x, r12.y
  movc r12.x, r13.w, r12.x, r12.y
  lt r12.y, l(0.000000), r12.x
  if_nz r12.y
    and r12.y, r21.w, l(255)
    movc r12.y, r12.y, l(1), l(0)
    if_nz r12.y
      and r22.xyzw, r21.wwww, l(1, 2, 4, 8)
      movc r22.xyzw, r22.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r12.y, r21.w, l(4)
      ubfe r13.w, l(1), l(4), r21.w
      movc r23.x, r13.w, l(1.000000), l(0)
      and r20.xyw, r12.yyyy, l(2, 4, 0, 8)
      movc r23.yzw, r20.xxyw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r12.y, r23.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r13.w, r12.zwww, r22.xyzw
      dp4 r14.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r13.w, r13.w, l(-1.000000)
      mad r13.w, r14.w, r13.w, l(1.000000)
      mul r12.y, r12.y, r13.w
    else 
      mov r12.y, l(1.000000)
    endif 
    lt r13.w, l(0.000000), r12.y
    if_nz r13.w
      and r13.w, r20.z, l(0x0000ffff)
      f16tof32 r13.w, r13.w
      mul r14.w, r13.w, l(0.500000)
      mad r20.xyz, -r19.xyzx, r14.wwww, r17.xyzx
      mad r17.xyz, r19.xyzx, r14.wwww, r17.xyzx
      lt r13.w, l(0.000000), r13.w
      if_nz r13.w
        dp3 r13.w, r20.xyzx, r20.xyzx
        rsq r13.w, r13.w
        dp3 r14.w, r17.xyzx, r17.xyzx
        rsq r14.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.w, r20.xyzx, r17.xyzx
        mul r14.w, r13.w, r14.w
        mad r14.w, r14.w, l(0.500000), r13.w
        add r14.w, r14.w, l(0.500000)
        div r13.w, r13.w, r14.w
      else 
        dp3 r14.w, r20.xyzx, r20.xyzx
        add r14.w, r14.w, l(1.000000)
        div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
      endif 
      movc r11.w, r11.w, r13.w, l(1.000000)
      mul r17.xyz, r11.wwww, r15.xyzx
      mul r18.xyz, r12.xxxx, r18.xyzx
      mul r18.xyz, r12.yyyy, r18.xyzx
      mul r17.xyz, r17.xyzx, r18.xyzx
    else 
      mov r17.xyz, l(0,0,0,0)
    endif 
  else 
    mov r17.xyz, l(0,0,0,0)
  endif 
  ushr r11.w, r21.w, l(8)
  and r11.w, r8.w, r11.w
  add r17.xyz, r16.xyzx, r17.xyzx
  movc r16.xyz, r11.wwww, r17.xyzx, r16.xyzx
  iadd r9.w, r9.w, l(1)
endloop 
bfi r0.x, l(28), l(4), r1.w, l(12)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.x, r0.x, t0.xxxx
mad r11.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r11.x, r11.x
dp3 r0.z, r3.xyzx, r2.xyzx
mov_sat r1.w, r0.z
mul r1.w, r1.w, l(-9.280000)
exp r1.w, r1.w
min r0.y, r0.y, r1.w
mad r0.y, r0.y, r11.x, r11.y
mad r11.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r11.zwzz
lt r0.y, l(0.000000), cb3[116].w
if_nz r0.y
  add r9.xyz, r9.xyzx, -r10.xyzx
  mad r9.xyz, r9.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r1.xyzx
  mov r9.w, l(1.000000)
  dp4 r4.x, r9.xyzw, r4.xyzw
  dp4 r4.y, r9.xyzw, r5.xyzw
  dp4 r0.y, r9.xyzw, r6.xyzw
  div r4.xy, r4.xyxx, r0.yyyy
  mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.y, r0.y, cb0[224].x, cb0[224].y
  log r0.y, r0.y
  mul r0.y, r0.y, cb0[224].z
  mul r4.z, r0.y, cb0[223].z
  if_z v3.x
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t14.xyzw, s0, l(0.000000)
  else 
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r4.xyzx, t15.xyzw, s0, l(0.000000)
  endif 
  mul r4.x, r5.w, v4.w
  mad r4.yzw, v4.xxyz, r5.wwww, r5.xxyz
else 
  mov r4.xyzw, v4.wxyz
endif 
mul r5.xyz, cb4[1].yzwy, cb4[1].xxxx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), cb0[135].x
if_nz r0.y
  iadd r0.y, r2.w, l(16)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r6.xyz, r0.y, t0.xyzx
  add r6.xyz, -r6.xyzx, -r10.xyzx
  iadd r9.xyzw, r2.wwww, l(304, 288, 400, 416)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.xyz, r9.x, t0.xyzx
  add r12.xyz, r1.xyzx, -r12.xyzx
  mad r6.xyz, r6.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r12.xyzx
  or r9.xyz, r9.yzwy, l(44, 28, 44, 0)
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.x, r9.x, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.y, r9.y, t0.xxxx
  ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r12.z, r9.z, t0.xxxx
  add r9.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r9.xyzx, |r6.xyzx|
  or r0.y, r6.y, r6.x
  or r0.y, r6.z, r0.y
  add r1.w, -r10.y, -r10.x
  add r1.w, -r10.z, r1.w
  mul r1.w, r1.w, l(2420.113525)
  frc r1.w, r1.w
  add r1.x, r1.y, r1.x
  add r1.x, r1.z, r1.x
  mad r1.x, r1.x, l(0.001154), r1.w
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r5.xyz, r0.yyyy, r1.xyzx, r5.xyzx
  movc o0.w, r0.y, l(1.000000), r7.w
else 
  mov o0.w, r7.w
endif 
movc r1.xyz, cb3[36].xxxx, r16.xyzx, l(0,0,0,0)
add r0.y, r0.z, r0.z
mad r2.xyz, r3.xyzx, r0.yyyy, -r2.xyzx
add r0.y, l(-1.000000), cb0[190].z
max r0.z, r0.w, l(0.001000)
log r0.z, r0.z
mad r0.z, -r0.z, l(1.200000), l(1.000000)
add r0.y, -r0.z, r0.y
mov r2.w, cb2[r0.x + 682].y
sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r2.xyzw, t13.xyzw, s2, r0.y
mul r2.xyz, r2.xyzx, cb2[r0.x + 682].xxxx
mul r2.xyz, r2.xyzx, cb0[155].xyzx
dp3 r0.y, r8.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
dp3 r0.z, cb0[155].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.z, cb2[r0.x + 1023].w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb0[192].z
mad_sat r0.y, r0.w, cb0[192].x, cb0[192].y
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.y, r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, r2.xyzx
mul r0.w, r14.y, l(50.000000)
mov_sat r0.w, r0.w
mul r0.w, r11.y, r0.w
mad r2.xyz, r14.xyzx, r11.xxxx, r0.wwww
mul r0.xyz, r0.xyzx, r2.xyzx
mad r2.xyz, r14.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r14.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r14.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mad r1.xyz, r14.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r13.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, cb0[140].xxxx, r1.xyzx, r0.xyzx
mul r1.xyz, r13.xyzx, r8.xyzx
mad r2.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r2.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.641700, 0.641700, 0.641700, 0.000000)
mad r2.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r2.xyzx
add r2.xyz, r2.xyzx, l(0.690300, 0.690300, 0.690300, 0.000000)
max r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
add r0.xyz, r5.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r4.xxxx, r4.yzwy
mul o0.xyz, r0.xyzx, cb0[130].yyyy
ret 
// Approximately 748 instruction slots used
